
table sosTable { snap { 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0 } }
table scaleTable { { 1, 2 } }
table fadeTable { { 0, 1 } }
table oneThirdTable { { 0, 1, 0 } }

// sinTable and cosTable must be defined for the rotate function to work
table sinTable { {
0.000000, 0.024541, 0.049068, 0.073565, 0.098017, 0.122411, 0.146730, 0.170962,
0.195090, 0.219101, 0.242980, 0.266713, 0.290285, 0.313682, 0.336890, 0.359895,
0.382683, 0.405241, 0.427555, 0.449611, 0.471397, 0.492898, 0.514103, 0.534998,
0.555570, 0.575808, 0.595699, 0.615232, 0.634393, 0.653173, 0.671559, 0.689541,
0.707107, 0.724247, 0.740951, 0.757209, 0.773010, 0.788346, 0.803208, 0.817585,
0.831470, 0.844854, 0.857729, 0.870087, 0.881921, 0.893224, 0.903989, 0.914210,
0.923880, 0.932993, 0.941544, 0.949528, 0.956940, 0.963776, 0.970031, 0.975702,
0.980785, 0.985278, 0.989177, 0.992480, 0.995185, 0.997290, 0.998795, 0.999699,
1.000000, 0.999699, 0.998795, 0.997290, 0.995185, 0.992480, 0.989177, 0.985278,
0.980785, 0.975702, 0.970031, 0.963776, 0.956940, 0.949528, 0.941544, 0.932993,
0.923880, 0.914210, 0.903989, 0.893224, 0.881921, 0.870087, 0.857729, 0.844854,
0.831470, 0.817585, 0.803208, 0.788346, 0.773010, 0.757209, 0.740951, 0.724247,
0.707107, 0.689541, 0.671559, 0.653173, 0.634393, 0.615232, 0.595699, 0.575808,
0.555570, 0.534998, 0.514103, 0.492898, 0.471397, 0.449611, 0.427555, 0.405241,
0.382683, 0.359895, 0.336890, 0.313682, 0.290285, 0.266713, 0.242980, 0.219101,
0.195090, 0.170962, 0.146730, 0.122411, 0.098017, 0.073565, 0.049068, 0.024541,
0.000000, -0.024541, -0.049068, -0.073565, -0.098017, -0.122411, -0.146730, -0.170962,
-0.195090, -0.219101, -0.242980, -0.266713, -0.290285, -0.313682, -0.336890, -0.359895,
-0.382683, -0.405241, -0.427555, -0.449611, -0.471397, -0.492898, -0.514103, -0.534998,
-0.555570, -0.575808, -0.595699, -0.615232, -0.634393, -0.653173, -0.671559, -0.689541,
-0.707107, -0.724247, -0.740951, -0.757209, -0.773010, -0.788346, -0.803208, -0.817585,
-0.831470, -0.844854, -0.857729, -0.870087, -0.881921, -0.893224, -0.903989, -0.914210,
-0.923880, -0.932993, -0.941544, -0.949528, -0.956940, -0.963776, -0.970031, -0.975702,
-0.980785, -0.985278, -0.989177, -0.992480, -0.995185, -0.997290, -0.998795, -0.999699,
-1.000000, -0.999699, -0.998795, -0.997290, -0.995185, -0.992480, -0.989177, -0.985278,
-0.980785, -0.975702, -0.970031, -0.963776, -0.956940, -0.949528, -0.941544, -0.932993,
-0.923880, -0.914210, -0.903989, -0.893224, -0.881921, -0.870087, -0.857729, -0.844854,
-0.831470, -0.817585, -0.803208, -0.788346, -0.773010, -0.757209, -0.740951, -0.724247,
-0.707107, -0.689541, -0.671559, -0.653173, -0.634393, -0.615232, -0.595699, -0.575808,
-0.555570, -0.534998, -0.514103, -0.492898, -0.471397, -0.449611, -0.427555, -0.405241,
-0.382683, -0.359895, -0.336890, -0.313682, -0.290285, -0.266713, -0.242980, -0.219101,
-0.195090, -0.170962, -0.146730, -0.122411, -0.098017, -0.073565, -0.049068, -0.024541 } }

table cosTable { {
1.000000, 0.999699, 0.998795, 0.997290, 0.995185, 0.992480, 0.989177, 0.985278,
0.980785, 0.975702, 0.970031, 0.963776, 0.956940, 0.949528, 0.941544, 0.932993,
0.923880, 0.914210, 0.903989, 0.893224, 0.881921, 0.870087, 0.857729, 0.844854,
0.831470, 0.817585, 0.803208, 0.788346, 0.773010, 0.757209, 0.740951, 0.724247,
0.707107, 0.689541, 0.671559, 0.653173, 0.634393, 0.615232, 0.595699, 0.575808,
0.555570, 0.534998, 0.514103, 0.492898, 0.471397, 0.449611, 0.427555, 0.405241,
0.382683, 0.359895, 0.336890, 0.313682, 0.290285, 0.266713, 0.242980, 0.219101,
0.195090, 0.170962, 0.146730, 0.122411, 0.098017, 0.073565, 0.049068, 0.024541,
0.000000, -0.024541, -0.049068, -0.073565, -0.098017, -0.122411, -0.146730, -0.170962,
-0.195090, -0.219101, -0.242980, -0.266713, -0.290285, -0.313682, -0.336890, -0.359895,
-0.382683, -0.405241, -0.427555, -0.449611, -0.471397, -0.492898, -0.514103, -0.534998,
-0.555570, -0.575808, -0.595699, -0.615232, -0.634393, -0.653173, -0.671559, -0.689541,
-0.707107, -0.724247, -0.740951, -0.757209, -0.773010, -0.788346, -0.803208, -0.817585,
-0.831470, -0.844854, -0.857729, -0.870087, -0.881921, -0.893224, -0.903989, -0.914210,
-0.923880, -0.932993, -0.941544, -0.949528, -0.956940, -0.963776, -0.970031, -0.975702,
-0.980785, -0.985278, -0.989177, -0.992480, -0.995185, -0.997290, -0.998795, -0.999699,
-1.000000, -0.999699, -0.998795, -0.997290, -0.995185, -0.992480, -0.989177, -0.985278,
-0.980785, -0.975702, -0.970031, -0.963776, -0.956940, -0.949528, -0.941544, -0.932993,
-0.923880, -0.914210, -0.903989, -0.893224, -0.881921, -0.870087, -0.857729, -0.844854,
-0.831470, -0.817585, -0.803208, -0.788346, -0.773010, -0.757209, -0.740951, -0.724247,
-0.707107, -0.689541, -0.671559, -0.653173, -0.634393, -0.615232, -0.595699, -0.575808,
-0.555570, -0.534998, -0.514103, -0.492898, -0.471397, -0.449611, -0.427555, -0.405241,
-0.382683, -0.359895, -0.336890, -0.313682, -0.290285, -0.266713, -0.242980, -0.219101,
-0.195090, -0.170962, -0.146730, -0.122411, -0.098017, -0.073565, -0.049068, -0.024541,
0.000000, 0.024541, 0.049068, 0.073565, 0.098017, 0.122411, 0.146730, 0.170962,
0.195090, 0.219101, 0.242980, 0.266713, 0.290285, 0.313682, 0.336890, 0.359895,
0.382683, 0.405241, 0.427555, 0.449611, 0.471397, 0.492898, 0.514103, 0.534998,
0.555570, 0.575808, 0.595699, 0.615232, 0.634393, 0.653173, 0.671559, 0.689541,
0.707107, 0.724247, 0.740951, 0.757209, 0.773010, 0.788346, 0.803208, 0.817585,
0.831470, 0.844854, 0.857729, 0.870087, 0.881921, 0.893224, 0.903989, 0.914210,
0.923880, 0.932993, 0.941544, 0.949528, 0.956940, 0.963776, 0.970031, 0.975702,
0.980785, 0.985278, 0.989177, 0.992480, 0.995185, 0.997290, 0.998795, 0.999699 } }

table convexFade { {
0.0000000, 0.0249307, 0.0498458, 0.0747300, 0.0995678, 0.1243436, 0.1490421, 0.1736480,
0.1981460, 0.2225208, 0.2467572, 0.2708403, 0.2947549, 0.3184864, 0.3420199, 0.3653407,
0.3884345, 0.4112868, 0.4338834, 0.4562103, 0.4782536, 0.4999996, 0.5214348, 0.5425459,
0.5633196, 0.5837433, 0.6038040, 0.6234894, 0.6427872, 0.6616854, 0.6801723, 0.6982363,
0.7158664, 0.7330514, 0.7497807, 0.7660440, 0.7818310, 0.7971320, 0.8119375, 0.8262383,
0.8400255, 0.8532904, 0.8660250, 0.8782212, 0.8898714, 0.9009684, 0.9115055, 0.9214758,
0.9308734, 0.9396923, 0.9479270, 0.9555725, 0.9626240, 0.9690770, 0.9749277, 0.9801723,
0.9848076, 0.9888306, 0.9922391, 0.9950306, 0.9972037, 0.9987569, 0.9996892, 1.0000000 } }

table concaveFade { {
0.0000000, 0.0003108, 0.0012431, 0.0027962, 0.0049692, 0.0077608, 0.0111692, 0.0151922,
0.0198275, 0.0250720, 0.0309227, 0.0373757, 0.0444271, 0.0520726, 0.0603073, 0.0691261,
0.0785237, 0.0884940, 0.0990310, 0.1101280, 0.1217782, 0.1339744, 0.1467089, 0.1599738,
0.1737609, 0.1880617, 0.2028672, 0.2181682, 0.2339552, 0.2502184, 0.2669477, 0.2841327,
0.3017627, 0.3198268, 0.3383136, 0.3572118, 0.3765096, 0.3961950, 0.4162557, 0.4366793,
0.4574530, 0.4785641, 0.4999992, 0.5217452, 0.5437885, 0.5661154, 0.5887120, 0.6115643,
0.6346580, 0.6579789, 0.6815124, 0.7052438, 0.7291585, 0.7532415, 0.7774780, 0.8018527,
0.8263507, 0.8509566, 0.8756551, 0.9004309, 0.9252687, 0.9501528, 0.9750680, 1.0000000 } }

// idCollisionMapLocal::SetupTrmModelStructure sets this on created triangle surfaces
_tracemodel
{
	collision
}

// required for renderer startup
_default
{
	{
		map	_default
	}
}

shaderdemos/testRotate
{
	{
//		map		gfx/misc/console01.tga
		map		_default
		rotate	time * -0.1
	}
}

shaderdemos/testClamp
{
	{
		map		textures/base_wall/steel.tga
		clamp
	}
}

shaderdemos/testZeroClamp
{
	{
		map		textures/base_wall/steel.tga
		zeroclamp
	}
}

shaderdemos/entityGui
{
	discrete
	qer_editorimage	textures/editor/entityGui.tga
	guiSurf	entity
}

shaderdemos/entityGui2
{
	discrete
	qer_editorimage	textures/editor/entityGui.tga
	guiSurf	entity2
}

shaderdemos/entityGui3
{
	discrete
	qer_editorimage	textures/editor/entityGui.tga
	guiSurf	entity3
}

shaderDemos/skybox
{
	{
//		cameraCubeMap	env/boxsky
		cameraCubeMap	env/cloudy
//		texgen			skybox
		texgen			wobblesky 10 0.1 0.1
	}
}

// auto sprite test demos
shaderDemos/deformFlare
{
	noshadows
	translucent
	nonsolid
	deform	flare 16
	qer_editorimage	textures/editor/flare.tga

	{
		blend	add
		map		_quadratic
		colored				// take color from light entity
		vertexcolor			// fade as the surface goes oblique
	}
}

shaderDemos/deformFlareDimmed
{
	noshadows
	translucent
	nonsolid
	deform	flare 16
	qer_editorimage	textures/editor/flare.tga

	{
		blend	add
		map		_quadratic
		red parm0 * 0.5
		green parm1 * 0.5
		blue parm2 * 0.5
		vertexcolor
	}
}

shaderDemos/lightSoundShader
{
	{
		map		lights/squarelight1.tga
		red 		sound * Parm0
		green 		sound * Parm1
		blue 		sound * Parm2
		zeroclamp
	}
}

shaderDemos/scratchMaterial
{
	noshadows
	{
		blend	blend
		map		_scratch
	}
}

shaderDemos/opaqueScratchMaterial
{
	noshadows
	{
		blend	gl_one, gl_zero
		map		_scratch
	}
}

shaderDemos/invertedScratchMaterial
{
	noshadows
	{
		map		_scratch
		scale	1, -1
	}
}

// the transition between the loading screen and gameplay
// parm3 will ramp from 0.0 to 1.0 during the wipe time
wipeMaterial
{
	{
		blend blend
		alpha	parm3
		map		_black			// the image we are wiping from
		scale	1, -1			// copyTexImage makes it upside down
		translate	0, -1			// move it back to the 0.0 to 1.0 range so clamp works
	}
}

wipe2Material
{
/*
	{	// fill the alpha channel with 0
		maskcolor				// write only to the alpha channel
		map _white
		alpha	0
	}
*/
	{	// blend the image capture over the screen where the alpha test passed
		blend	blend
		map		_black		// the image we are wiping from
		scale	1, -1			// copyTexImage makes it upside down
		translate	0, -1			// move it back to the 0.0 to 1.0 range so clamp works
		alpha	1.0 - parm3
	}
}

lights/spectrumLight
{
	lightFalloffImage	makeintensity( lights/squarelight1a.tga )
	spectrum 1
	{
		map lights/squarelight1.tga
		colored
		zeroClamp
	}
}

shaderDemos/spectrumDecal
{
	qer_editorimage textures/decals/symbol06.tga
	DECAL_MACRO
	noShadows
	nonsolid
	noimpact
	twoSided
	translucent
	spectrum 1
	{
	  	blend	diffusemap
		map		textures/decals/symbol06.tga
		red		(fireballtable[ time * .2]) * parm0
		green	(fireballtable[ time * .2]) * parm1
		blue	(fireballtable[ time * .2]) * parm2
	}
	{
	  	blend	specularmap
		map		textures/decals/symbol06.tga
	}
}

table table4 { snap { 0, 1, 2, 3 } }
table table8 { snap { 0, 1, 2, 3, 4, 5, 6, 7 } }
table table16 { snap { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 } }
table table32 { snap { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ,24, 25, 26, 27, 28, 29, 30, 31 } }
table tableTest { { 1, 0 } }

lights/tableTest
{
	{

		map	lights/squareishlight.tga
		rgb tableTest[ time ]
		zeroClamp
	}
}

shaderDemos/heatHaze
{
	translucent		// don't write during the fill depth buffer phase
	{
		vertexProgram	heatHaze.vfp
		vertexParm		0		0 , time * 0.05	// texture scrolling
		vertexParm		1		1				// magnitude of the distortion
		fragmentProgram	heatHaze.vfp
		fragmentMap		0		_currentRender
		fragmentMap		1		textures/hell/lava1_local.tga	// the normal map for distortion
	}
}

skin heatHaze
{
	*	shaderDemos/heatHaze
}

shaderDemos/colorProcess
{
	{
		program	colorProcess.vfp
		vertexParm		0		sinTable[ time * 0.1 ]	// 0.0 = source color, 1.0 = target color
		vertexParm		1		0.9, 0.6, 0.9			// target full intensity RGB
		fragmentMap		0		_currentRender
	}
}