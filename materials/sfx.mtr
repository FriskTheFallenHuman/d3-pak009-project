table hangarblinktable { { 0,0,0,1,1,1,1,1,.5,.25, 0 } }

textures/sfx/puzzglass
 {
	noSelfShadow
	noshadows
	translucent
	glass
	qer_editorimage textures/sfx/puzzglass.tga
	{
		maskcolor
		map	makealpha(textures/sfx/puzzglass.tga)
	}
	{
		blend gl_dst_alpha, gl_one
		maskalpha
	   	cubeMap		env/gen2
		red		Parm0
		green   Parm1
		blue	Parm2
		texgen		reflect
	}
}

textures/sfx/fridgeglass1
 {
	translucent
	twoSided
	noshadows
	glass
	qer_editorimage textures/sfx/fridgeglass1
	{
		maskcolor
		map	makealpha(textures/sfx/fridgeglass1.tga)
	}
	{
		blend gl_dst_alpha, gl_one
		maskalpha
	   	cubeMap		env/gen2
		texgen		reflect
		red .7
		green .9
		blue  .9
	}
}

textures/sfx/mc_medglass
 {
	translucent
	twoSided
	noshadows
	//glass
	qer_editorimage textures/sfx/mc_medglass
	{
		maskcolor
		map	makealpha(textures/sfx/mc_medglass.tga)
	}
	{
		blend gl_dst_alpha, gl_one
		maskalpha
	   	cubeMap		env/gen2
		texgen		reflect
		red .7
		green .9
		blue  .9
	}
}

textures/sfx/bioscanbeam
{
	sort nearest
	noSelfShadow
	noshadows
	twosided
	translucent
	nonsolid
	noimpact
	qer_editorimage textures/sfx/bioscanbeam.tga
	{
		blend	add
		map	textures/sfx/bioscanbeam.tga
		rgb	neontable2 [ time * 1.5 ]
	}
}

textures/sfx/hangar_redflare
{
	qer_editorimage textures/editor/hangar_redflare.tga
	noShadows
	deform sprite
	discrete
	nonsolid
	noimpact
	{
		blend	add
		map	textures/sfx/defaultflare
		red 1
		green 0
		blue 0
	}
}

textures/sfx/hangar_redflareblink
{
	qer_editorimage textures/editor/hangar_redflareblink.tga
	noShadows
	deform sprite
	discrete
	nonsolid
	noimpact
	{
		blend	add
		map	textures/sfx/defaultflare
		red hangarblinktable[ time * 1 ]
		green 0
		blue 0
	}
}

textures/sfx/keycircuit
{
	translucent
	twoSided
	noshadows
	qer_editorimage	textures/sfx/keycircuit.tga
	{
		blend add
		cubeMap		env/bland
		texgen		reflect
		vertexcolor
	}
	{
		blend	diffuseMap
		map textures/sfx/keycircuit.tga
	}
}

armorViewEffect
{
	{
		blend blend
		map makealpha(textures/sfx/armorViewEffect2.tga)
		clamp
		red 1.0
		green 0.0
		blue 0.0
		alpha parm3
	}
}

textures/sfx/act1glass3
{
	translucent
	twoSided
	noshadows
	glass
	qer_editorimage	textures/editor/act1glass3

	{
		blend add
		Map		textures/glass/tram_add
		//this has to be del for speed on monorail texgen		reflect
		red			parm0
		green		parm1
		blue		parm2
	}
}

textures/sfx/blueglass
{
	translucent
	twoSided
	noshadows
	glass
	qer_editorimage	textures/editor/buttugly_glass.tga
	{
		blend add
		cubeMap		env/bland
		texgen		reflect
	}
	{
		blend	diffuseMap
		//map textures/sfx/blueglass
		map textures/glass/daddyitburns
		//scale	 16 , 16
	}
}

textures/sfx/blueshard
{
	translucent
	twoSided
	noshadows
	qer_editorimage	textures/sfx/blueglass.tga
	{
		blend	diffuseMap
		map textures/sfx/blueglass.tga
		//scale	 16 , 16
		colored
	}
}

textures/sfx/amberglass
{
	translucent
	twoSided
	noshadows
	glass
	qer_editorimage	textures/sfx/amberglass.tga
	{
		blend add
		cubeMap		env/bland
		texgen		reflect
	}
	{
		blend	diffuseMap
		map textures/sfx/amberglass.tga
		//scale	 16 , 16
	}
}

textures/sfx/ambershard
{
	translucent
	twoSided
	noshadows
	qer_editorimage	textures/sfx/amberglass.tga
	{
		blend	diffuseMap
		map textures/sfx/amberglass.tga
		//scale	 16 , 16
		colored
	}
}

textures/sfx/bubble
{
	noselfShadow
	noshadows
	deform sprite
	translucent
	discrete
	nonsolid
	noimpact
	qer_editorimage  textures/sfx/bubble.tga
	{
		blend	add
		map	textures/sfx/bubble.tga
	}
}

textures/sfx/bevglass01
{
	noselfShadow
	noshadows
	twosided
	translucent
	glass
	{
		blend	filter
		map	textures/sfx/bevglass01.tga
	}
	bumpmap		addnormals(textures/sfx/bevglass01_local.tga, heightmap(textures/sfx/bevglass01_h.tga, 2 ) )
	specularmap		textures/sfx/bevglass01_s.tga
	//{
	//	blend add
	//	cubeMap		env/bland
	//	texgen		reflect
	//}
}

textures/sfx/monitor_glass2
{
	qer_editorimage		textures/editor/monitor_glass2.tga
	noselfShadow
	noshadows
	translucent
	glass
	bumpmap		textures/sfx/monitor_glass_local.tga
	specularmap		textures/sfx/monitor_glass_s.tga
	//{
	//	blend add
	//	cubeMap		env/bland
	//	texgen		reflect
	//}
}

/* this flare dissapears when SHADERPARM_MODE (parm7) is set, indicating a broken light */
textures/sfx/flare
{
	noshadows
	translucent
	nonsolid
	deform flare 		16
	qer_editorimage		textures/editor/flare.tga
	{
		if ( parm7 == 0 )
		blend		add
		map		_quadratic
		colored
		vertexcolor
	}
}

textures/sfx/flare_8
{
	noshadows
	translucent
	nonsolid
	deform flare 		8
	qer_editorimage		textures/editor/flare.tga
	{
		if ( parm7 == 0 )
		blend		add
		map		_quadratic
		colored
		vertexcolor
	}
}

textures/sfx/flare_2
{
	noshadows
	translucent
	nonsolid
	deform flare 		2
	qer_editorimage		textures/editor/flare.tga
	{
		if ( parm7 == 0 )
		blend		add
		map		_quadratic
		colored
		vertexcolor
	}
}


textures/sfx/flare_1
{
	noshadows
	translucent
	nonsolid
	deform flare 		1
	qer_editorimage		textures/editor/flare.tga
	{
		if ( parm7 == 0 )
		blend		add
		map		_quadratic
		colored
		vertexcolor
	}
}

/* this flare uses parm4 to modify the size */
textures/sfx/flareSizeable
{
	noshadows
	translucent
	nonsolid
	deform flare 		( 16 + parm4 )
	qer_editorimage		textures/editor/flare.tga
	{
		if ( parm7 == 0 )
		blend		add
		map		_quadratic
		colored
		vertexcolor
	}
}

textures/sfx/flare_cv
{
	noshadows
	translucent
	nonsolid
	deform flare 		16
	qer_editorimage		textures/editor/flare.tga
	{
		blend		add
		map		_quadratic
		colored
		vertexcolor
	}
}

textures/sfx/flare_toggle
{
	noshadows
	translucent
	nonsolid
	deform flare 		16
	qer_editorimage		textures/editor/flare.tga
	{
		blend		add
		map		_quadratic
		rgba
		red		parm0 * parm7
		green	parm1 * parm7
		blue	parm2 * parm7
		alpha	parm3 * parm7
		vertexcolor
	}
}

textures/sfx/flare_toggle2
{
	noshadows
	translucent
	nonsolid
	deform flare 		16
	qer_editorimage		textures/editor/flare.tga
	{
		blend		add
		map		_quadratic
		rgba
		red		parm0 * parm7
		green	parm1 * parm7
		blue	parm2 * parm7
		alpha	parm3 * parm7
		vertexcolor
	}
}

textures/sfx/flare_cv2
{
	noshadows
	translucent
	nonsolid
	deform flare 		16
	qer_editorimage		textures/editor/flare.tga
	{
		blend		add
		map		_quadratic
		colored
		vertexcolor
	}
}

//duplicate of flare needed for models
textures/sfx/flare2
{
	noshadows
	translucent
	nonsolid
	deform flare 		( 16 + parm4 )
	qer_editorimage		textures/editor/flare.tga
	{
		blend		add
		map		_quadratic
		colored
		vertexcolor
	}
}

//duplicate of flare needed for models
textures/sfx/flare3
{
	noshadows
	translucent
	nonsolid
	deform flare 		( 16 + parm4 )
	qer_editorimage		textures/editor/flare.tga
	{
		blend		add
		map		_quadratic
		colored
		vertexcolor
	}
}

//duplicate of flare needed for models
textures/sfx/flare4
{
	noshadows
	translucent
	nonsolid
	deform flare 		( 16 + parm4 )
	qer_editorimage		textures/editor/flare.tga
	{
		blend		add
		map		_quadratic
		colored
		vertexcolor
	}
}

//duplicate of flare needed for models
textures/sfx/flare5
{
	noshadows
	translucent
	nonsolid
	deform flare 		( 16 + parm4 )
	qer_editorimage		textures/editor/flare.tga

	{
		blend		add
		map		_quadratic
		colored
		vertexcolor
	}
}

textures/sfx/shatterglass01
{
	translucent
	//nonsolid
	//noimpact
	twoSided
	noshadows
	//polygonOffset
	qer_editorimage	textures/editor/shatterglass01.tga
	{
		blend add
		cubeMap		env/bland
		texgen		reflect
	}
	{
		blend diffuseMap
		map textures/sfx/shatterglass01_d.tga
	}
}

textures/sfx/techglass1
{
	translucent
	//nonsolid
	//noimpact
	twosided
	noshadows
	//polygonOffset
	glass
	qer_editorimage	textures/editor/buttugly_glass.tga
	{
		blend add
		cubeMap		env/bland
		texgen		reflect
	}
	{
		blend	add
		map textures/glass/daddyitburns
		//map textures/sfx/techglass1
		scale	8 , 8
	}
}

textures/sfx/chiglass1blue
{
	translucent
	twoSided
	glass
	noshadows
	forceOverlays
	qer_editorimage	textures/sfx/chiglass1blue.tga
	{
		blend	diffuseMap
		map textures/sfx/chiglass1blue_d.tga
		scale	 16 , 16
	}
	{
		blend add
		cubeMap		env/gen1
		texgen		reflect
		vertexcolor
	}
}

textures/sfx/chiglass1blue_sort_close
{
	translucent
	twoSided
	noshadows
	sort nearest
	glass
	qer_editorimage	textures/sfx/chiglass1blue.tga
	{
		blend add
		cubeMap		env/bland
		texgen		reflect
	}
	{
		blend	diffuseMap
		map textures/sfx/chiglass1blue_d.tga
		scale	 16 , 16
	}
}

textures/sfx/chiglass1bluex
{
	translucent
	//nonsolid
	//noimpact
	twoSided
	noshadows
	//polygonOffset
	glass
	qer_editorimage	textures/sfx/chiglass1blue.tga
	{
		blend add
		cubeMap		env/xcputest
		texgen		reflect
	}
	{
		blend	diffuseMap
		map textures/sfx/chiglass1blue_d.tga
		scale	 16 , 16
	}
}

textures/sfx/chiglass1
{
	translucent
	//nonsolid
	//noimpact
	twosided
	noshadows
	//polygonOffset
	glass
	qer_editorimage	textures/sfx/chiglass1.tga
	{
		blend add
		cubeMap		env/bland
		texgen		reflect
	}
	{
		blend	diffuseMap
		map textures/sfx/chiglass1_d.tga
		scale	 16 , 16
	}
}

textures/sfx/act1glass
{
	translucent
	twoSided
	noshadows
	glass
	qer_editorimage	textures/sfx/chiglass1blue.tga
	{
		blend add
		cubeMap		env/act1
		texgen		reflect
	}
	{
		blend	diffuseMap
		map textures/sfx/chiglass1blue_d.tga
		scale	 16 , 16
	}
}

textures/sfx/act1glass2
{
	translucent
	twoSided
	noshadows
	sort close
	glass
	qer_editorimage	textures/sfx/act1glass.tga
	{
		blend add
		cubeMap		env/act1
		texgen		reflect
	}
	{
	 	 blend	diffuseMap
		map textures/sfx/act1glass_d.tga
//		scale	 16 , 16
	}
}

textures/sfx/bglass01a
{
	qer_editorimage	textures/sfx/bglass01.tga
	translucent
	twosided
	noshadows
	nonsolid
	glass
	diffusemap		textures/sfx/bglass01_d.tga
}

textures/sfx/bglass01
{
	translucent
	nonsolid
	noimpact
	twosided
	noshadows
	//polygonOffset
	glass
	qer_editorimage	textures/sfx/bglass01.tga
	{
		blend add
		map textures/sfx/bglass01_d.tga
	}
}

textures/sfx/black

 {
	description "used for big boxes no light no shadows"
	noSelfShadow
	noshadows
	forceOpaque			// will still seal levels
	//twosided

	qer_editorimage textures/sfx/black.tga

	{
		map	textures/sfx/black_2.tga
	}

}

textures/sfx/beam_red
{
	noSelfShadow
	noshadows
	twosided
	translucent
	nonsolid
	noimpact
	qer_editorimage textures/sfx/beam_red.tga
	{
		blend	add
		map	textures/sfx/beam_red.tga
		scroll	time * 0.2 , time * 0
		//scale	 2 , 1 
	}
	{
		blend	add
		map	textures/sfx/beam_red.tga
		scroll	time * 0.11 , time * 0
		//scale	 4 , 1
	}
}

textures/sfx/beam_blue
{
	noSelfShadow
	noshadows
	twosided
	translucent
	nonsolid
	noimpact
	qer_editorimage textures/sfx/beam_blue.tga
	{
		blend	add
		map	textures/sfx/beam_blue.tga
		scroll	time * 0.2 , time * 0
		//scale	 2 , 1
	}
	{
		blend	add
		map	textures/sfx/beam_blue2.tga
		scroll	time * -0.31 , time * 0
		scale	 2 , 1
	}
}

textures/sfx/mac_reflective
{
	discrete
	translucent
	noshadows
	qer_editorimage	textures/editor/mac_reflective.tga
	{
		blend diffuseMap
		map textures/sfx/shatterglass01_d.tga
//		map textures/washroom/mirror.tga
	}
	{
		mirrorRenderMap		256 256		// size of the texture to draw the mirror view in
		blend	blend
		// tint
		red		0.7
		green	0.7
		blue	0.8

		// opacity
		alpha	0.6

		// fix up the projection
		translate	0.5 , 0.5
		scale	0.5 , 0.5
	}
}

textures/sfx/shotgunpuff
{
	qer_editorimage textures/editor/dontuse.tga
	noShadows
	sort 5
	{
		blend blend
		map textures/particles/smokepuffb.tga
		vertexcolor
	}
}

textures/sfx/muzzleflash
{
	qer_editorimage textures/editor/dontuse.tga
	noShadows
	{
		blend add
		map textures/particles/smokepuffb.tga
		vertexcolor
	}
}

/* this flare uses global parms to affect the color of all using this shader */
textures/sfx/flare_global
{
	noshadows
	translucent
	nonsolid
	deform flare 		16
	qer_editorimage		textures/editor/flare.tga
	{
		if ( parm7 == 0 )
		blend		add
		map			_quadratic
		red			parm0 * global0
		green		parm1 * global0
		blue		parm2 * global0
		vertexcolor
	}
}

textures/sfx/flare_global1
{
	noshadows
	translucent
	nonsolid
	deform flare 		16
	qer_editorimage		textures/editor/flare.tga
	{
		if ( parm7 == 0 )
		blend		add
		map			_quadratic
		red			parm0 * global1
		green		parm1 * global1
		blue		parm2 * global1
		vertexcolor
	}
}

table refract { { .7, 1, .5, .7, 0, .6, 1, .8, .6, 0, .7, 1, .6, 1, 1, .6, .7, .8, 0, .6, 1, .5, .7, 1 } }

textures/sfx/refract
{
	noselfShadow
	noshadows
	deform sprite
	translucent
	discrete
	nonsolid
	noimpact
	qer_editorimage	textures/particles/smokepuff.tga
	{
		blend blend
		//cubeMap		env/bland
		//texgen		reflect
		map textures/particles/smokepuff.tga
		rgba refract[ time * 0.4 ] * 0.5
		scroll	sintable[time * 0.08], time * 1.14
	}
	/*
		{
			blend	blend
			map textures/particles/smokepuff.tga
			//scroll 0, time * 0.1
			alpha refract[ time * 0.1 ] * 0.2
			//scale	 16 , 16
		}
	*/
}

table shattertable1 { clamp { 0, 0, 1, 0 } }
table shattertable2 { clamp { 0, 0, 0, 1 } }

textures/sfx/bglass01_ed
{
	//used on broken version of 3_bulb_light 3 of 4
	translucent
	nonsolid
	noimpact
	twosided
	noshadows
	//polygonOffset
	qer_editorimage	textures/sfx/bglass01.tga
	{
		blend add
		map textures/sfx/bglass01.tga
	}
}

table ptfullfade 	{ { .2, .1 , .002 , .0 ,.3, .1, .2, .8 ,.6 , .5 } }
table lightning 	{ { .2, 0 , 1 , 1 , 1, 0 ,0 ,0 ,0 ,0 ,.5,0 ,0 ,0  } }
table lightning2 	{ { .2, .3 , 0, 0.1, 0, .2 , .3 ,.2 , 0 , 0 , 0 , 0.02 , 0 , 0.02 , 0 , 0.02 , .05 , .08 , .02, 0 , 0 , 0 , 0, .2, 0 , 0 , .1  } }

textures/sfx/vpring_power3
{
	qer_editorimage		textures/editor/dontuse.tga
	//deform sprite
	{
		vertexProgram           heatHazeWithMask.vfp
		vertexParm              0       time * 0 , time * 0 // texture scrolling
		vertexParm              1       3           // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/particles/vpring1.tga   // the normal map for distortion
		fragmentMap             2       textures/particles/vpring1_alpha.tga   // the distortion blend map
	}
}

textures/sfx/lightning2
{
	qer_editorimage		textures/editor/dontuse.tga
	translucent
	twosided
	noshadows
	nonsolid
	{
		maskcolor
		map makealpha(textures/particles/lightningmask.tga)
		vertexcolor
	}
	{
		blend gl_dst_alpha, gl_one
		maskalpha
		map			textures/sfx/lightning3
		translate	1,time*2.1
		rgb		lightning2 [ time * .3624 ]*1.5
		scale		1,ember1   [time*.251]
	}
}

textures/sfx/lightning3
{
	qer_editorimage		textures/editor/dontuse.tga
	translucent
	twosided
	noshadows
	nonsolid
	{
		maskcolor
		map			makealpha(textures/particles/lightningmask.tga)
		vertexcolor
	}
	{
		blend		gl_dst_alpha, gl_one
	   	maskalpha
		map			textures/sfx/lightning3
		translate	1,time*3
		red			parm0 * lightning2 [time*.3124]*2   //rgb		lightning2 [time*.3124]*2
		green		parm1 * lightning2 [time*.3124]*2
		blue		parm2 * lightning2 [time*.3124]*2
		scale		1,ember1   [time*.21]
	}
}

textures/sfx/lightning4_color
{
	qer_editorimage		textures/editor/dontuse.tga
	translucent
	twosided
	noshadows
	nonsolid
	{
		maskcolor
		map makealpha(textures/particles/lightningmask.tga)
		vertexcolor
	}
	{
		blend gl_dst_alpha, gl_one
		maskalpha
		map			textures/sfx/lightning4_color
		translate	1,time*2.1
		rgb		lightning2 [ time * .6124 ]*1.3121
		scale		1,ember1   [time*.5]
	}
}

textures/sfx/lightning5_color
{
	qer_editorimage		textures/editor/dontuse.tga
	translucent
	twosided
	noshadows
	nonsolid
	{
		maskcolor
		map makealpha(textures/particles/lightningmask.tga)
		vertexcolor
	}
	{
		blend gl_dst_alpha, gl_one
		maskalpha
		map			textures/sfx/lightning5_color.tga
		translate	1,time*3
		rgb		lightning2 [ time * .7824 ]*2.1
		scale		1,ember1   [time*.5]
	}
}

textures/sfx/lightning7
{
	qer_editorimage		textures/editor/dontuse.tga
	translucent
	twosided
	noshadows
	nonsolid
	{
		maskcolor
		map makealpha(textures/particles/lightningmask.tga)
		vertexcolor
	}
	{
		blend gl_dst_alpha, gl_one
		maskalpha
		map			textures/sfx/lightning7.tga
		translate	1,time*3
		rgb		lightning2 [ time * .7824 ]*2.1
		scale		1,ember1   [time*.5]
	}
}

textures/sfx/lightning8a
{
	qer_editorimage		textures/editor/dontuse.tga
	translucent
	twosided
	noshadows
	nonsolid
	{
		maskcolor
		map makealpha(textures/particles/lightningmask.tga)
		vertexcolor
	}
	{
		blend gl_dst_alpha, gl_one
		maskalpha
		map			textures/sfx/lightning8.tga
		translate	1,time*3.2
		rgb		lightning2 [ time * .71 ]*2.1
		scale		1,ember1   [time*.5]
	}
}

textures/sfx/lightning9a
{
	qer_editorimage		textures/editor/dontuse.tga
	translucent
	twosided
	noshadows
	nonsolid
	{
		maskcolor
		map makealpha(textures/particles/lightningmask.tga)
		vertexcolor
	}
	{
		blend gl_dst_alpha, gl_one
		maskalpha
		map			textures/sfx/lightning9.tga
		translate	1,time*3
		rgb		lightning2 [ time * .7824 ]*2.1
		scale		1,ember1   [time*.5]
	}
}

textures/sfx/radiogoop_d
{
	qer_editorimage textures/sfx/radiogoop_d.tga
	deform turbulent	sinTable 0.02 (time*0.1) 10
	noShadows
	noselfShadow
	{
		blend		bumpmap
		map			textures/sfx/radiogoop_local.tga
		translate	1,time*0.02
	}
	{
		blend		diffusemap
		map			textures/sfx/radiogoop_d.tga
		translate	1,time*0.02
		rgb			.5
	}
	{
		blend		specularmap
		map			models/mapobjects/radiogoop/radiogoopflow_s.tga
		translate	1,time*0.02
	}
	{
		blend		add
		map			textures/sfx/radiogoop_add.tga
		translate	1,time*0.02
		rgb		 PTfullfade [ time * .1 ]+0.1
	}
}

table ember1 { { .7, 1, .5, .7, .6, 1, .8, .6, .7, 1, .6, 1, 1, .6, .7, .8, .6, 1, .5, .7, 1 } }
table stripAnim16table { snap { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 } }

table threestage { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
table elevenstage { { .5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
table sixstage { { 1, 0, 0, 0, 0, 0 } }

table slowstart_one_zero { { 1.000000, 0.999699, 0.998795, 0.997290, 0.995185, 0.992480, 0.989177, 0.985278,
0.980785, 0.975702, 0.970031, 0.963776, 0.956940, 0.949528, 0.941544, 0.932993,
0.923880, 0.914210, 0.903989, 0.893224, 0.881921, 0.870087, 0.857729, 0.844854,
0.831470, 0.817585, 0.803208, 0.788346, 0.773010, 0.757209, 0.740951, 0.724247,
0.707107, 0.689541, 0.671559, 0.653173, 0.634393, 0.615232, 0.595699, 0.575808,
0.555570, 0.534998, 0.514103, 0.492898, 0.471397, 0.449611, 0.427555, 0.405241,
0.382683, 0.359895, 0.336890, 0.313682, 0.290285, 0.266713, 0.242980, 0.219101,
0.195090, 0.170962, 0.146730, 0.122411, 0.098017, 0.073565, 0.049068, 0.024541
} }

table faststart_zero_one { { 0.024541, 0.049068, 0.073565, 0.098017, 0.122411, 0.146730, 0.170962,
0.195090, 0.219101, 0.242980, 0.266713, 0.290285, 0.313682, 0.336890, 0.359895,
0.382683, 0.405241, 0.427555, 0.449611, 0.471397, 0.492898, 0.514103, 0.534998,
0.555570, 0.575808, 0.595699, 0.615232, 0.634393, 0.653173, 0.671559, 0.689541,
0.707107, 0.724247, 0.740951, 0.757209, 0.773010, 0.788346, 0.803208, 0.817585,
0.831470, 0.844854, 0.857729, 0.870087, 0.881921, 0.893224, 0.903989, 0.914210,
0.923880, 0.932993, 0.941544, 0.949528, 0.956940, 0.963776, 0.970031, 0.975702,
0.980785, 0.985278, 0.989177, 0.992480, 0.995185, 0.997290, 0.998795, 0.999699,
1.000000 } }

table watersplashscaletable { { 0.024541, 0.049068, 0.073565, 0.098017, 0.122411, 0.146730, 0.170962,
0.195090, 0.219101, 0.242980, 0.266713, 0.290285, 0.313682, 0.336890, 0.359895,
0.382683, 0.405241, 0.427555, 0.449611, 0.471397, 0.492898, 0.514103, 0.534998,
0.555570, 0.575808, 0.595699, 0.615232, 0.634393, 0.653173, 0.671559, 0.689541,
0.707107, 0.724247, 0.740951, 0.757209, 0.773010, 0.788346, 0.803208, 0.817585,
0.831470, 0.844854, 0.857729, 0.870087, 0.881921, 0.893224, 0.903989, 0.914210,
0.923880, 0.932993, 0.941544, 0.949528, 0.956940, 0.963776, 0.970031, 0.975702,
0.980785, 0.985278, 0.989177, 0.992480, 0.995185, 0.997290, 0.998795, 0.999699,
1.000000 } }

table watersplashrgbtable { { 0, 1, 1, 1, .8, .6, .4, .2, .1, .05, 0 } }
table s_lightningtable { { 1, .5, 1, 0, 0, 0, 0, 1, 1, 0, .5, 1, 0, 1, .5, 0, 0, 0, 0, 0, 0, 0} }
table s_lightningtable2 { { 1, 2, 1, 3 } }

textures/sfx/seneca_vptest
{
	qer_editorimage	textures/editor/dontuse.tga
	nonsolid
	translucent
	{
		vertexProgram           heatHazeWithMask.vfp
		vertexParm              0       time * 0.1 , time * 0.5 // texture scrolling
		vertexParm              1       1.5           // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion
		fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map
	}
}

textures/sfx/s_lightning2b
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/s_lightning2
		red			s_lightningtable [(time*.5)+(.66+parm4)] * parm0
		green		s_lightningtable [(time*.5)+(.66+parm4)] * parm1
		blue		s_lightningtable [(time*.5)+(.66+parm4)] * parm2
		centerscale	s_lightningtable2[time*4], s_lightningtable2[time*4]
		zeroclamp
	}
}

textures/sfx/s_lightning2a
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/s_lightning2
		red			s_lightningtable [(time*.5)+(.33+parm4)] * parm0
		green		s_lightningtable [(time*.5)+(.33+parm4)] * parm1
		blue		s_lightningtable [(time*.5)+(.33+parm4)] * parm2
		centerscale	s_lightningtable2[time*4], s_lightningtable2[time*4]
		zeroclamp
	}
}

textures/sfx/s_lightning2
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/s_lightning2
		red			s_lightningtable [(time*.5)+parm4] * parm0
		green		s_lightningtable [(time*.5)+parm4] * parm1
		blue		s_lightningtable [(time*.5)+parm4] * parm2
		centerscale	s_lightningtable2[time*4], s_lightningtable2[time*4]
		zeroclamp
	}
}

textures/sfx/s_lightning1b
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/s_lightning1
		translate	1,time*1.5
		red			s_lightningtable [(time*.5)+(.66+parm4)] * parm0
		green		s_lightningtable [(time*.5)+(.66+parm4)] * parm1
		blue		s_lightningtable [(time*.5)+(.66+parm4)] * parm2
		scale		1,ember1 [time*1.5]
	}
}

textures/sfx/s_lightning1a
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/s_lightning1
		translate	1,time*3
		red			s_lightningtable [(time*.5)+(.33+parm4)] * parm0
		green		s_lightningtable [(time*.5)+(.33+parm4)] * parm1
		blue		s_lightningtable [(time*.5)+(.33+parm4)] * parm2
		scale		1,ember1 [time*.75]
	}
}

textures/sfx/s_lightning1
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/s_lightning1
		translate	1,time*2
		red			s_lightningtable [(time*.5)+parm4] * parm0
		green		s_lightningtable [(time*.5)+parm4] * parm1
		blue		s_lightningtable [(time*.5)+parm4] * parm2
		scale		1,ember1 [time]
	}
}

textures/sfx/enprotubeglass
{
	qer_editorimage	textures/sfx/enprotubeglass
	translucent
	{
		blend		diffusemap
		map			textures/sfx/enprotubeglass
	}
	specularmap		textures/sfx/enprotubeglass_s
	{
		blend 		gl_zero,gl_one_minus_src_color
		map			textures/sfx/enprotubeglass_filter
		translate	1,(time*parm3) + parm4
		colored
	}
	{
		blend 		gl_zero,gl_one_minus_src_color
		map			textures/sfx/enprotubeglass_filter2
		colored
	}
}

textures/sfx/act1glass3_dirt
{
	qer_editorimage	textures/sfx/act1glass3a
	nonsolid
	translucent
	{
		blend		add
		cubeMap		env/act1
		texgen		reflect
		red			parm0
		green		parm1
		blue		parm2
	}
	{
		blend		filter
		map			textures/sfx/act1glass3a
	}
}

textures/sfx/watersplash2
{
	qer_editorimage		textures/editor/watersplash2
	nonsolid
	translucent
	{
		blend			bumpmap
		map				textures/sfx/watersplash2_local
		scale			1,1.5
		translate		1,time*-0.35
	}
	{
		blend			diffusemap
		map				_white //textures/sfx/watersplash2_d
		rgb				0
	}
	{
		blend			specularmap
		map				textures/sfx/watersplash2_s
		rgb				.7
	}
}

table snapTen { snap { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
table snapFive { snap { 1, 0, 0, 0, 0 } }
table lerp2Table { { 0, 1 } }

//
// This shader features a cross-faded, animating bump map, which is tedious to set up.
// Bump maps can't really be blended, so it selects one bump map and blends the diffuse
// and specular maps, then selects an adjacent bump map and inverse blends the diffuse
// and specular maps.  There must be an even number of frames, with the odd numbered
// frames going in the first pass, and the even numbered frames going in the second.
//
// It is probably easiest to just ask John to set these up.
//
textures/sfx/waterbump
{
	qer_editorimage textures\decals\bloodpool01_jim
	nonsolid
	//
	// first part of the crossfade
	//
	{
		if snapFive[ time * Parm3 * 0.5 + Parm4 + 0.0 / 5 ]
		blend 	bumpmap
		map	heightmap (textures/sfx/untitled001, 4)
		rgb	elevenstage [ time * Parm3 + Parm4 + 10.0 / 11 ]
	}
	{
		if snapFive[ time * Parm3 * 0.5 + Parm4 + 1.0 / 5 ]
		blend 	bumpmap
		map	heightmap (textures/sfx/untitled003, 4)
	}
	{
		if snapFive[ time * Parm3 * 0.5 + Parm4 + 2.0 / 5 ]
		blend 	bumpmap
		map	heightmap (textures/sfx/untitled005, 4)
	}
	{
		if snapFive[ time * Parm3 * 0.5 + Parm4 + 3.0 / 5 ]
		blend 	bumpmap
		map	heightmap (textures/sfx/untitled007, 4)
	}
	{
		if snapFive[ time * Parm3 * 0.5 + Parm4 + 4.0 / 5 ]
		blend 	bumpmap
		map	heightmap (textures/sfx/untitled009, 4)
	}
	{
		blend	diffusemap
		rgb		lerp2Table[ ( time * Parm3 * 0.5 + Parm4 ) * 5  ]
		map		textures\decals\bloodpool01_jim
	}
	{
		blend	specularmap
		rgb		lerp2Table[ ( time * Parm3 * 0.5 + Parm4 ) * 5  ]
//		map		textures\decals\bloodrun01_s
		map		_white
	}
	//
	// second part of the crossfade
	//
	{
		if snapFive[ time * Parm3 * 0.5 + Parm4 + 0.5 / 5 ]
		blend 	bumpmap
		map	heightmap (textures/sfx/untitled002, 4)
	}
	{
		if snapFive[ time * Parm3 * 0.5 + Parm4 + 1.5 / 5 ]
		blend 	bumpmap
		map	heightmap (textures/sfx/untitled004, 4)
	}
	{
		if snapFive[ time * Parm3 * 0.5 + Parm4 + 2.5 / 5 ]
		blend 	bumpmap
		map	heightmap (textures/sfx/untitled006, 4)
	}
	{
		if snapFive[ time * Parm3 * 0.5 + Parm4 + 3.5 / 5 ]
		blend 	bumpmap
		map	heightmap (textures/sfx/untitled008, 4)
	}
	{
		if snapFive[ time * Parm3 * 0.5 + Parm4 + 4.5 / 5 ]
		blend 	bumpmap
		map	heightmap (textures/sfx/untitled010, 4)
	}
	{
		blend	diffusemap
		rgb		1.0 - lerp2Table[ ( time * Parm3 * 0.5 + Parm4 ) * 5  ]
		map		textures\decals\bloodpool01_jim
	}
	{
		blend	specularmap
		rgb		1.0 - lerp2Table[ ( time * Parm3 * 0.5 + Parm4 ) * 5  ]
//		map		textures\decals\bloodrun01_s
		map		_white
	}
}

//This material does not render when applied to a brush or patch
textures/sfx/dm_spectrum
{
	qer_editorimage	textures/sfx/dm_spectrum.tga
	DECAL_MACRO
	noShadows
	nonsolid
	noimpact
	translucent
	spectrum 2
	{
	  	blend	diffusemap
		map		textures/sfx/dm_spectrum.tga
		//red		(fireballtable[ time * .2]) * parm0
		//green	(fireballtable[ time * .2]) * parm1
		//blue	(fireballtable[ time * .2]) * parm2
	}
//	{
//      	blend	specularmap
//		map		textures/decals/symbol06.tga
//	}
}

textures/sfx/clearreflect
{
	qer_editorimage			textures/common/qer_mirror.tga
	sort				nearest
	{
		mirrorRenderMap		256	256
		blend	add
		//red		0.3
		//green	0.3
		//blue	0.1
		alpha	1
		translate			0.5 , 0.5
		scale				0.5 , 0.5

	}
}

textures/sfx/web4
{
	qer_editorimage	textures/sfx/web4.tga
	translucent
	noshadows
	twosided
	nonsolid
	flesh
	sort	5
	bumpmap			heightmap (textures/sfx/web4.tga, 2)
	diffusemap		textures/sfx/web4.tga
	{
		blend		specularmap
		map			textures/sfx/web4.tga
		red			.25
		green		.25
		blue		.2
	}
}

textures/sfx/web3a
{
	nonsolid
	twosided
	flesh
	sort	farthest
	{
		blend		blend
		map			textures/sfx/web2.tga
		rgb			.5
	}
}

textures/sfx/web3
{
	nonsolid
	twosided
	flesh
	sort	farthest
	{
		blend		blend
		map			textures/sfx/web1.tga
		rgb			.7
	}
}

textures/sfx/web2
{
	qer_editorimage	textures/sfx/web2.tga
	translucent
	noshadows
	flesh
	bumpmap			heightmap (textures/sfx/web2.tga, 4)
	diffusemap		textures/sfx/web2.tga
	{
		blend		specularmap
		map			textures/sfx/web2.tga
		red			.25
		green		.25
		blue		.2
	}
}

textures/sfx/web1nonsolid
{
	qer_editorimage	textures/sfx/web1.tga
	translucent
	noshadows
	flesh
	nonsolid
	bumpmap			heightmap (textures/sfx/web1.tga, 4)
	diffusemap		textures/sfx/web1.tga
	{
		blend		specularmap
		map			textures/sfx/web1.tga
		red			.25
		green		.25
		blue		.2
	}
}

textures/sfx/web1
{
	qer_editorimage	textures/sfx/web1.tga
	translucent
	noshadows
	flesh
	bumpmap			heightmap (textures/sfx/web1.tga, 4)
	diffusemap		textures/sfx/web1.tga
	{
		blend		specularmap
		map			textures/sfx/web1.tga
		red			.25
		green		.25
		blue		.2
	}
}

textures/sfx/xrayblend
{
	translucent
	nonsolid
	noshadows
	qer_editorimage	textures/sfx/xrayblend
	sort				nearest
	{
		blend		gl_one_minus_dst_color,gl_zero
		map			textures/sfx/xrayblend
	}
}

textures/sfx/mac_glow
{
	translucent
	nonsolid
	noshadows
	qer_editorimage		textures/sfx/mac_glow.tga
	{
		blend		add
		map		textures/sfx/mac_glow.tga
		rgb		3
	}
}

textures/sfx/outsidedustpass1
{
	qer_editorimage		textures/sfx/outsidedustpass1
	translucent
	noshadows
	{
		blend		add
		map		textures/sfx/outsidedustpass1.tga
		translate 	time * .17, 0
		colored
	}
	{
		blend		add
		map		textures/sfx/outsidedustpass1.tga
		translate 	time * 0.07, 0.1
		colored
	}
}

textures/sfx/redskyglass
{
	translucent
	twosided
	noshadows
	qer_editorimage	env/desert2_nx.tga
	{
		blend 	add
		cubeMap	env/desert2
		texgen	reflect
	}
}

textures/sfx/defaultflare
{
	qer_editorimage textures/sfx/defaultflare.tga
	noShadows
	deform sprite
	discrete
	nonsolid
	noimpact
	{
		blend	add
		map		textures/sfx/defaultflare.tga
		red		parm0
		green	parm1
		blue	parm2
	}
}

textures/sfx/flamesparks
{
	sort far		// usually happens right in front of a wall, so make sure it draws behind gun smoke
	{
		blend add
		map textures/sfx/firesparks.tga
//		rgb  sintable [time] + 2.5
//		centerScale (1.25 + 0.25 * sintable[time]), (1.25 + 0.25 * sintable[time])
		zeroClamp
//		translate sintable[time], 0
	}
}

textures/sfx/bluefog
{
	translucent
	noShadows
	{
		blend gl_one,gl_one
		map textures/sfx/bluefog.tga
	}
}

//chrome texture for mals room
textures/sfx/chrome_mal_pipe
{
	qer_editorimage	env/mal_pipe_px.tga
	forceopaque
	{
		blend add
		cubeMap		env/mal_pipe
//		texgen		normal
		texgen		reflect
	}
}

textures/sfx/vpring1
{
	qer_editorimage textures/editor/dontuse.tga
	translucent
	{
		program         heatHazeWithMaskAndVertex.vfp
		vertexParm              0               0                               // texture scrolling
		vertexParm              1               2                             // magnitude of the distortion
		fragmentMap             0               _currentRender
		fragmentMap     		1       textures/particles/vpring1  // the normal map for distortion
		fragmentMap             2       textures/particles/vpring1_alpha.tga   // the distortion blend map
	}
}

textures/sfx/vpring2
{
	qer_editorimage textures/editor/dontuse.tga
	translucent
	{
		program         heatHazeWithMaskAndVertex.vfp
		vertexParm              0               0                               // texture scrolling
		vertexParm              1               6                             // magnitude of the distortion
		fragmentMap             0               _currentRender
		fragmentMap     		1       textures/particles/vpring2  // the normal map for distortion
		fragmentMap             2       textures/particles/vpring1_alpha.tga   // the distortion blend map
	}
}

textures/sfx/vpring3
{
	qer_editorimage textures/editor/dontuse.tga
	translucent
	{
		program         heatHazeWithMaskAndVertex.vfp
		vertexParm              0               0                               // texture scrolling
		vertexParm              1               10                             // magnitude of the distortion
		fragmentMap             0               _currentRender
		fragmentMap     		1       textures/particles/vpring2  // the normal map for distortion
		fragmentMap             2       textures/particles/vpring1_alpha.tga   // the distortion blend map
	}
}

textures/sfx/vpsphere
{
	qer_editorimage textures/editor/dontuse.tga
	translucent
	{
		Program           heatHazeWithMaskAndVertex.vfp
		vertexParm              0       time * 0 , time * 0 // texture scrolling
		vertexParm              1       2            // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/particles/vpsphere   // the normal map for distortion
		fragmentMap             2       textures/particles/vpring1_alpha.tga   // the distortion blend map
	}
}

textures/sfx/vptelesphere
{
	qer_editorimage textures/editor/dontuse.tga
	translucent
	{
		program         heatHazeWithMaskAndVertex.vfp
		vertexParm              0               0                               // texture scrolling
		vertexParm              1               5                             // magnitude of the distortion
		fragmentMap             0               _currentRender
		fragmentMap     		1       textures/particles/vpring1  // the normal map for distortion
		fragmentMap             2       textures/particles/vpring1_alpha.tga   // the distortion blend map
	}
}

textures/sfx/vppinch_bfgbolt
{
	qer_editorimage textures/editor/dontuse.tga
	deform sprite
	translucent
	{
		program         heatHazeWithMaskAndVertex.vfp
		vertexParm              0       time * 0 , time * 0 // texture scrolling
		vertexParm              1       3            // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/particles/vppinch.tga   // the normal map for distortion
		fragmentMap             2       textures/particles/vpring2_alpha.tga   // the distortion blend map
	}
}

textures/sfx/vppinch
{
	qer_editorimage textures/editor/dontuse.tga
	//deform sprite
	translucent
	{
		vertexProgram           heatHazeWithMask.vfp
		vertexParm              0       time * 0 , time * 0 // texture scrolling
		vertexParm              1       1            // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/particles/vppinch.tga   // the normal map for distortion
		fragmentMap             2       textures/particles/vpring1_alpha.tga   // the distortion blend map
	}
}


textures/sfx/vp1ghost
{
	qer_editorimage textures/editor/dontuse.tga
	deform sprite
	translucent
	{
		vertexProgram           heatHazeWithMask.vfp
		vertexParm              0       time * 0.1 , time * 0.5 // texture scrolling
		vertexParm              1       1            // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion
		fragmentMap             2       textures/particles/vpring2_alpha.tga   // the distortion blend map
	}
}

textures/sfx/vp1
{
	qer_editorimage textures/editor/dontuse.tga
	deform sprite
	nonsolid
	translucent
	{
		vertexProgram           heatHazeWithMask.vfp
		vertexParm              0       time * 0.1 , time * 0.5 // texture scrolling
		vertexParm              1       0.9            // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion
		fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map
	}
}

textures/sfx/vp3
{
	qer_editorimage textures/editor/dontuse.tga
	deform sprite
	nonsolid
	translucent
	{
		vertexProgram           heatHazeWithMask.vfp
		vertexParm              0       time * 0.1 , time * 0.5 // texture scrolling
		vertexParm              1       0.4            // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion
		fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map
	}
}

textures/sfx/vp1particle
{
	qer_editorimage textures/editor/dontuse.tga
	nonsolid
	translucent
	{
		vertexProgram           heatHazeWithMask.vfp
		vertexParm              0       time * 0.8 , time * 0.5 // texture scrolling
		vertexParm              1       4            // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion
		fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map
	}
}

textures/sfx/vp1particle2
{
	qer_editorimage textures/editor/dontuse.tga
	nonsolid
	translucent
	{
		vertexProgram           heatHazeWithMask.vfp
		vertexParm              0       time * 0.8 , time * 0.5 // texture scrolling
		vertexParm              1       1            // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion
		fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map
	}
}

textures/sfx/vpfridge1glass
{
	qer_editorimage textures/editor/dontuse.tga
	nonsolid
	translucent
	{
		Program           heatHaze.vfp
		vertexParm              0       time * 0 , time * 0 // texture scrolling
		vertexParm              1       .9          // magnitude of the distortion
		fragmentProgram			heatHaze.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/sfx/vp1    //vpcurve_y   // the normal map for distortion
	}
}

textures/sfx/vppuzzglass
{
	qer_editorimage textures/editor/dontuse.tga
	nonsolid
	translucent
	{
		vertexProgram           heatHazeWithMask.vfp
		vertexParm              0       time * 0 , time * 0 // texture scrolling
		vertexParm              1       1.2           // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/particles/vpsphere   // the normal map for distortion
	}
}

textures/sfx/vpalphaglass
{
	qer_editorimage textures/editor/dontuse.tga
	twosided
	translucent
	{
		vertexProgram           heatHazeWithMask.vfp
		vertexParm              0       time * 0 , time * 0 // texture scrolling
		vertexParm              1       .4         // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/sfx/vp1   // the normal map for distortion
	}
}

textures/sfx/vp1band
{
	qer_editorimage textures/editor/dontuse.tga
	nonsolid
	translucent
	{
		vertexProgram           heatHazeWithMask.vfp
		vertexParm              0       time * 0.0 , time * 0.1 // texture scrolling
		vertexParm              1       1.2            // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/hell/lava1.tga   // the normal map for distortion
		fragmentMap             2       textures/sfx/vp1tilehoriz_alpha.tga   // the distortion blend map
	}
}

textures/sfx/vp2
{
	qer_editorimage textures/editor/dontuse.tga
	deform sprite
	nonsolid
	translucent
	{
		vertexProgram           heatHazeWithMask.vfp
		vertexParm              0       time * 0.1 , time * 0.5*Parm3 // texture scrolling
		vertexParm              1       5           // magnitude of the distortion
		fragmentProgram			heatHazeWithMask.vfp
		fragmentMap             0       _currentRender
		fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion
		fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map
	}
}

textures/sfx/plasmapuff
{
	qer_editorimage	textures/editor/dontuse.tga
	{
	  	blend		add
		map textures/particles/blacksmokepuff.tga
		vertexColor
	}
}

textures/sfx/lag
{
	qer_editorimage textures/sfx/lag.tga
	noShadows
	nonsolid
	noimpact
	twoSided
	translucent
	{
		colored
		blend	add
		map	textures/sfx/lag.tga
	}
}

textures/sfx/lagsprite
{
	qer_editorimage textures/sfx/lag.tga
	noShadows
	nonsolid
	noimpact
	translucent
	deform sprite
	{
		colored
		blend add
		map textures/sfx/lag.tga
	}
}

textures/sfx/chatsprite
{
	qer_editorimage textures/sfx/chat.tga
	noShadows
	nonsolid
	noimpact
	translucent
	deform sprite
	{
		colored
		blend add
		map textures/sfx/chat.tga
	}
}