table eyestable { { .3, 1, .9, .8, .5, .6, .5, .2, .7, .8, .3, .9, .3, .1, .5, .9, .2, .8 } }
table revtable { { .5,.5,.5,.5,.4,.5,.6,.7,0.6,.5,.4,.3  } }
table rev2table { { .6,.5,.5,.4,.5,.3,.6,.6,.4,.2,.2,.4  } }
table throbtable2 { { 0,.25,.5,1,.5,.25 } }
table archtable { clamp { 0,.25,.5,1,.5,.25, 0 } }

// i can break stuff
models/monsters/imp/imp
{
	qer_editorimage models/monsters/imp/imp_local.tga
	unsmoothedTangents
	//noselfshadow
	flesh
	renderbump  -size 512 512 -aa 3 models/monsters/imp/imp_local.tga models/monsters/imp/work/imp_hp.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/imp/imp_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/imp/imp_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	bumpmap	addnormals (models/monsters/imp/imp_local, heightmap (models/monsters/imp/imp_bmp.tga, 6) )
	diffusemap models/monsters/imp/imp_d
	specularmap	models/monsters/imp/imp_s
}

models/monsters/wraith/wraith
{
	qer_editorimage models/monsters/wraith/wraith_local.tga
	noselfShadow
	unsmoothedtangents
	flesh
	clamp
	renderbump  -size 1024 1024 -trace 0.02 -colorMap -aa 2  models/monsters/wraith/wraith_local.tga models/monsters/wraith/wraith_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/wraith/wraith_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
   		blend add
		blend gl_one, gl_zero
		map models/monsters/wraith/wraith_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceoverlays
	diffusemap	   models/monsters/wraith/wraith.tga
	bumpmap		addnormals(models/monsters/wraith/wraith_local.tga, heightmap(models/monsters/wraith/wraith_h.tga, 3 ) )
	specularmap		models/monsters/wraith/wraith_s.tga
}

models/monsters/ticks/tick
{
	qer_editorimage	models/monsters/ticks/tick_d.tga
	noSelfShadow
	flesh
	clamp
	unsmoothedtangents
	renderbump  -size 128 128 -trace 0.1 -colorMap -aa 4  models/monsters/ticks/tick_local.tga models/monsters/ticks/tick_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
   		blend add
		blend gl_one, gl_zero
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceoverlays
	diffusemap	models/monsters/ticks/tick_d.tga
	bumpmap	        models/monsters/ticks/tick_local.tga
	specularmap	models/monsters/ticks/tick_s.tga
}

models/monsters/ticks/tleg
{
	noSelfShadow
	noshadows
	flesh
	clamp
	unsmoothedtangents
	//forceoverlays
   	{
   		if ( parm7 == 0 )
		blend	diffusemap
		map	models/monsters/ticks/tleg_d.tga
		alphaTest 0.5
	}
	{
   		if ( parm7 == 0 )
	  	blend	bumpmap
		map	models/monsters/ticks/tleg_local.tga
	}
	{
   		if ( parm7 == 0 )
	  	blend	specularmap
		map	models/monsters/ticks/tleg_s.tga
	}
}

models/monsters/maledict/mtongue
{
	noSelfShadow
	//noshadows
	clamp
	unsmoothedtangents
	flesh
	renderbump  -size 1024 1024 -trace 0.02 -colorMap -aa 1  models/monsters/maledict/mtongue_local.tga models/monsters/maledict/mtongue_hi.lwo
	diffusemap 	models/monsters/maledict/mtongue.tga
	bumpmap		addnormals(models/monsters/maledict/mtongue_local.tga, heightmap( models/monsters/maledict/mtongue_h.tga, 3 ) )
	specularmap	models/monsters/maledict/mtongue_s.tga
}

models/monsters/maledict/maledict
{
	noSelfShadow
	clamp
	unsmoothedtangents
	flesh
	renderbump  -size 2048 2048 -trace 0.01 -colorMap -aa 1  models/monsters/maledict/maledict_local.tga models/monsters/maledict/maledict_hi.lwo
	{
		blend	diffusemap
		map	models/monsters/maledict/maledict_d.tga
		alphaTest 0.5
	}
	bumpmap		addnormals(models/monsters/maledict/maledict_local.tga, heightmap( models/monsters/maledict/maledict_h.tga, 3 ) )
	specularmap	models/monsters/maledict/maledict_s.tga
}

models/monsters/zombie/sawyer/shair1
{
	translucent
	clamp
	{
		blend	filter
		map	models/monsters/zombie/sawyer/shair1.tga
	}
}

models/monsters/zombie/morgue/morgue
{
	qer_editorimage	models/monsters/zombie/morgue/morgue_local.tga
	noselfShadow
	unsmoothedtangents
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.5 * (time - parm7)
	}
	renderbump  -size 1024 1024 -trace 0.03 -colorMap -aa 2  models/monsters/zombie/morgue/morgue_local.tga models/monsters/zombie/morgue/morgue_hi.lwo
	forceoverlays
	diffusemap	   models/monsters/zombie/morgue/morgue_d.tga
	bumpmap	   addnormals(models/monsters/zombie/morgue/morgue_local.tga, heightmap(models/monsters/zombie/morgue/morgue_h.tga, 3 ) )
	specularmap   models/monsters/zombie/morgue/morgue_s.tga
}

models/monsters/zombie/sawyer/sawyer
{
	qer_editorimage	models/monsters/zombie/sawyer/sawyer_local.tga
	noSelfShadow
	unsmoothedTangents
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.5 * (time - parm7)
	}
	renderbump  -size 1024 1024 -trace 0.03 -colorMap -aa 2  models/monsters/zombie/sawyer/sawyer_local.tga models/monsters/zombie/sawyer/sawyer_hi.lwo
	forceoverlays
	diffusemap	   models/monsters/zombie/sawyer/sawyer_d.tga
	{
		blend bumpmap
		map   addnormals(models/monsters/zombie/sawyer/sawyer_local.tga, heightmap(models/monsters/zombie/sawyer/sawyer_h.tga, 6 ) )
	}
	specularmap   models/monsters/zombie/sawyer/sawyer_s.tga
}

models/monsters/sabaoth/treads
{
	noSelfShadow
	noshadows
	ricochet
	{
		blend	diffusemap
		map	models/monsters/sabaoth/treads_d.tga
		alphaTest 0.5
		translate	time * 0 , time * 2
	}
	{
		blend	bumpmap
		map	models/monsters/sabaoth/treads_local.tga
		translate	time * 0 , time * 2
	}
	{
		blend	specularmap
		map	models/monsters/sabaoth/treads_s.tga
		translate	time * 0 , time * 2
	}
}

models/monsters/sabaoth/treads_slow
{
	noSelfShadow
	noshadows
	ricochet
	{
		blend	diffusemap
		map	models/monsters/sabaoth/treads_d.tga
		alphaTest 0.5
		translate	time * 0 , time * 2
	}
	{
		blend	bumpmap
		map	models/monsters/sabaoth/treads_local.tga
		translate	time * 0 , time * 2
	}
	{
		blend	specularmap
		map	models/monsters/sabaoth/treads_s.tga
		translate	time * 0 , time * 2
	}
}

models/monsters/sabaoth/treads_stopped
{
	noSelfShadow
	noshadows
	ricochet
	{
		blend	diffusemap
		map	models/monsters/sabaoth/treads_d.tga
		alphaTest 0.5
	}
	{
		blend	bumpmap
		map	models/monsters/sabaoth/treads_local.tga
	}
	{
		blend	specularmap
		map	models/monsters/sabaoth/treads_s.tga
	}
}

models/monsters/sabaoth/gear3
{
	noSelfShadow
	noshadows
	ricochet
	{
		blend	diffusemap
		map	models/monsters/sabaoth/gear3_d.tga
		alphaTest 0.5
		//rotate	time * -.45
		clamp
	}
	{
		blend	bumpmap
		map	models/monsters/sabaoth/gear3_local.tga
		//rotate	time * -.45
		clamp
	}
	{
		blend	specularmap
		map	models/monsters/sabaoth/gear3_s.tga
		//rotate	time * -.45
		clamp
	}
}

models/monsters/sabaoth/gear2
{
	noSelfShadow
	noshadows
	ricochet
	{
		blend	diffusemap
		map	models/monsters/sabaoth/gear2_d.tga
		alphaTest 0.5
		//rotate	time * -.45
		clamp
	}
	{
		blend	bumpmap
		map	models/monsters/sabaoth/gear2_local.tga
		//rotate	time * -.45
		clamp
	}
	{
		blend	specularmap
		map	models/monsters/sabaoth/gear2_s.tga
		//rotate	time * -.45
		clamp
	}
}

models/monsters/sabaoth/gear1
{
	noSelfShadow
	noshadows
	ricochet
	{
		blend	diffusemap
		map	models/monsters/sabaoth/gear1_d.tga
		alphaTest 0.5
		//rotate	time * .45
		clamp
	}
	{
		blend	bumpmap
		map	models/monsters/sabaoth/gear1_local.tga
		//rotate	time * .45
		clamp
	}
	{
		blend	specularmap
		map	models/monsters/sabaoth/gear1_s.tga
		//rotate	time * .45
		clamp
	}
}

models/monsters/sabaoth/sabaoth
{
	noSelfShadow
	flesh
	clamp
	unsmoothedtangents
	renderbump  -size 2048 2048 -trace 0.02 -colorMap -aa 1  models/monsters/sabaoth/sabaoth_local.tga models/monsters/sabaoth/sabaoth_hi.lwo
	diffusemap	models/monsters/sabaoth/sabaoth_d.tga
	bumpmap		addnormals(models/monsters/sabaoth/sabaoth_local.tga, heightmap( models/monsters/sabaoth/sabaoth_h.tga, 6 ) )
	specularmap	models/monsters/sabaoth/sabaoth_s.tga
}

models/monsters/vagary/vagary
{
	qer_editorimage	models/monsters/vagary/vagary_local.tga
	noSelfShadow
	flesh
	unsmoothedtangents
	clamp
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/vagary/vagary_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/vagary/vagary_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	renderbump  -size 1024 1024 -trace 0.1 -colorMap -aa 2  models/monsters/vagary/vagary_local.tga models/monsters/vagary/vagary_hi.lwo
	diffusemap	models/monsters/vagary/vagary.tga
	bumpmap		addnormals(models/monsters/vagary/vagary_local.tga, heightmap( models/monsters/vagary/vagary_h.tga, 9 ) )
	specularmap	models/monsters/vagary/vagary_s.tga
}

models/monsters/vagary/sac
{
	noSelfShadow
	noshadows
	translucent
	unsmoothedtangents
	liquid
	clamp
	renderbump  -size 256 256 -trace 0.02 -colorMap -aa 2  models/monsters/vagary/sac_local.tga models/monsters/vagary/sac_hi.lwo
	{
		if ( parm7 == 0 )
		blend 		diffusemap
		map	models/monsters/vagary/sac.tga
	}
	{
		if ( parm7 == 0 )
		blend		bumpmap
		map		addnormals( models/monsters/vagary/sac_local.tga, heightmap( models/monsters/vagary/sac_h.tga, 8 ) )
	}
	{
		if ( parm7 == 0 )
		blend	specularmap
		map		models/monsters/vagary/sac_s.tga
		//scroll	time * 0 , time * -0.1
	}
}

models/monsters/zombie/bernie/butt_flame
{
	qer_editorimage textures/particles/flame3_strip.tga
	noSelfShadow
	translucent
	noShadows
	twosided
	deform sprite
	{
		if	( parm7 == 0 )
		blend add
		map textures/particles/burst_strip.tga
		scale 1 / 32 , 1
		scroll table32[ time * .7 ] , 0
		clamp
	}
}

models/monsters/zombie/bernie/pelvis_flame
{
	qer_editorimage textures/particles/flame3_strip.tga
	noSelfShadow
	translucent
	noShadows
	twosided
	deform tube
	{
		if	( parm7 == 0 )
		blend add
		map textures/particles/flame3_strip.tga
		scale 1 / 32 , 1
		scroll table32[ time * .8 ] , 0
		clamp
	}
}

models/monsters/zombie/bernie/head_flame
{
	qer_editorimage textures/particles/flame3_strip.tga
	noSelfShadow
	translucent
	noShadows
	twosided
	deform tube
	{
		if	( parm7 == 0 )
		blend add
		map textures/particles/flame3_strip.tga
		scale 1 / 32 , 1
		scroll table32[ time * .8 ] , 0
		clamp
	}
}

models/monsters/zombie/bernie/wrist_flame
{
	qer_editorimage textures/particles/flame3_strip.tga
	noSelfShadow
	translucent
	noShadows
	twosided
	deform tube
	{
		if	( parm7 == 0 )
		blend add
		map textures/particles/flame3_strip.tga
		scale 1 / 32 , 1
		scroll table32[ time * .9 ] , 0
		clamp
	}
}

models/monsters/zombie/bernie/berniefx
{
	noShadows
	noselfshadow
	//deform sprite
	flesh
	nonsolid
	noimpact
	translucent
	{
		if	( parm7 == 0 )
		maskcolor
		map makealpha(models/monsters/zombie/bernie/berniefx.tga)
	}
	{
		if	( parm7 == 0 )
		blend gl_dst_alpha, gl_one
		maskalpha
		map models/monsters/lost/lostfx.tga
		red   1
		blue  .5
		green .5
		translate	time * 0.2 , time * 1.1
	}
}

models/monsters/zombie/bernie/bernie
{
	qer_editorimage	models/monsters/zombie/bernie/bernie_local.tga
	noSelfShadow
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.5 * (time - parm7)
	}
	renderbump  -size 1024 1024 -trace 0.1 -colorMap -aa 2  models/monsters/zombie/bernie/bernie_local.tga models/monsters/zombie/bernie/bernie_hi.lwo
	forceoverlays
	diffusemap	   models/monsters/zombie/bernie/bernie_d.tga
	bumpmap		addnormals(models/monsters/zombie/bernie/bernie_local.tga, heightmap(models/monsters/zombie/bernie/bernie_h.tga, 10 ) )
	specularmap		models/monsters/zombie/bernie/bernie_s.tga
}

models/monsters/wraith/wing
{
 	flesh
	noselfShadow
	translucent
	{
		if ( parm7 == 0 )
		blend	diffusemap
		map	models/monsters/wraith/wing.tga
		alphaTest 0.7
	}
	{
		if ( parm7 == 0 )
		blend  bumpmap
		map    heightmap (models/monsters/wraith/wing_h.tga, 10)
	}
	{
		if ( parm7 == 0 )
		blend		specularmap
		map 	models/monsters/wraith/wing_s.tga
	}
}

models/monsters/wraith/weyes
{
	noShadows
	//deform sprite
	//discrete
	nonsolid
	noimpact
	{
		if ( parm7 == 0 )
		blend	add
		map	models/monsters/wraith/weyes.tga
		//rgb		eyestable[ time * .5 ]
	}
 }

models/gibs/pork
{
	qer_editorimage	models/gibs/pork_local.tga
	noselfShadow
	unsmoothedTangents
	nonsolid
	noimpact
	flesh
	clamp
	renderbump  -size 512 512 -trace 0.02 -colorMap -aa 2  models/gibs/pork_local.tga models/gibs/pork_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.2 * (time - parm7)
	}
	{
		blend diffusemap
		map models/gibs/pork.tga
		//alphaTest parm6
	}
	bumpmap		addnormals(models/gibs/pork_local.tga, heightmap(models/gibs/pork_h.tga, 10 ) )
	specularmap		models/gibs/pork_s.tga
}

models/monsters/skeleton/skeleton01head
{
	qer_editorimage	models/monsters/skeleton/skeleton01_local.tga
	renderbump  -size 1024 1024 -trace 0.02 -colorMap -aa 2  models/monsters/skeleton/skeleton01_local.tga models/monsters/skeleton/skeleton_hi.lwo
 	noselfShadow
	unsmoothedTangents
	noshadows
	nonsolid
	//noimpact removed by tim
	flesh
	clamp
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		blend diffusemap
		map models/monsters/skeleton/skeleton01_d.tga
		//alphaTest parm7 // .5 + 0.5 * sintable [ time * .2  ]
	}
	specularmap 	models/monsters/skeleton/skeleton01_s.tga
	bumpmap		addnormals(models/monsters/skeleton/skeleton01_local.tga, heightmap(models/monsters/skeleton/skeleton01_h.tga, 6 ) )
}

models/monsters/skeleton/skeleton01
{
	qer_editorimage	models/monsters/skeleton/skeleton01_local.tga
	renderbump  -size 1024 1024 -trace 0.02 -colorMap -aa 2  models/monsters/skeleton/skeleton01_local.tga models/monsters/skeleton/skeleton_hi.lwo
 	noselfShadow
	unsmoothedTangents
	noshadows
	nonsolid
	//noimpact removed by tim
	flesh
	clamp
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/skeleton/skeleton01_d.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		blend diffusemap
		map models/monsters/skeleton/skeleton01_d.tga
		//alphaTest parm7 // .5 + 0.5 * sintable [ time * .2  ]
	}
	specularmap 	models/monsters/skeleton/skeleton01_s.tga
	bumpmap		addnormals(models/monsters/skeleton/skeleton01_local.tga, heightmap(models/monsters/skeleton/skeleton01_h.tga, 6 ) )
}

models/monsters/skeleton/skragdoll
{
	renderbump  -size 1024 1024 -trace 0.02 -colorMap -aa 2  models/monsters/skeleton/skeleton01_local.tga models/monsters/skeleton/skeleton_hi.lwo
 	noselfShadow
	unsmoothedTangents
	noshadows
	nonsolid
	flesh
	clamp
	{
		blend diffusemap
		map models/monsters/skeleton/skeleton01_d.tga
		alphaTest  .1
	}
	specularmap 	models/monsters/skeleton/skeleton01_s.tga
	bumpmap		addnormals(models/monsters/skeleton/skeleton01_local.tga, heightmap(models/monsters/skeleton/skeleton01_h.tga, 6 ) )
}

models/monsters/skeleton/skeleton02_d
{
	renderbump  -size 1024 1024 -trace 0.02 -colorMap -aa 2  models/monsters/skeleton/skeleton01_local.tga models/monsters/skeleton/skeleton_hi.lwo
 	noselfShadow
	unsmoothedTangents
	noshadows
	nonsolid
	flesh
	clamp
	{
		blend diffusemap
		map models/monsters/skeleton/skeleton02_d.tga
		alphaTest  .1
	}
	specularmap 	models/monsters/skeleton/skeleton02_s.tga
	bumpmap		addnormals(models/monsters/skeleton/skeleton01_local.tga, heightmap(models/monsters/skeleton/skeleton01_h.tga, 6 ) )
}

models/monsters/lost/lostfx
{
	noselfShadow
	noshadows
	translucent
	metal
	//deform particle lost_fire1
	{
		if ( parm7 == 0 )
		maskcolor
		map makealpha(models/monsters/lost/lostfxmask.tga)
	}
	{
		if ( parm7 == 0 )
		blend gl_dst_alpha, gl_one
		maskalpha
		map models/monsters/lost/lostfx.tga
		translate	time * -2.8 , time * -.1
	}
}

models/monsters/zsecurity/dzsechead2
{
	noselfShadow
	unsmoothedTangents
	metal
	clamp
	nooverlays
	diffusemap	    models/monsters/zsecurity/dzsechead2.tga
	bumpmap		    models/monsters/zsecurity/zsechead2_local.tga
	specularmap		models/monsters/zsecurity/dzsechead2_s.tga
}

models/monsters/gseeker/gseeker
{
	qer_editorimage	models/monsters/gseeker/gseeker_local.tga
	noSelfShadow
	flesh
	unsmoothedtangents
	clamp
	renderbump		-size 512 1024 -trace 0.07 -colorMap -aa 2  models/monsters/gseeker/gseeker_local.tga models/monsters/gseeker/gseeker_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
   		blend add
		blend gl_one, gl_zero
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	diffusemap		models/monsters/gseeker/gseeker.tga
	bumpmap			addnormals( models/monsters/gseeker/gseeker_local.tga, heightmap( models/monsters/gseeker/gseeker_h.tga, 14 ) )
	specularmap		models/monsters/gseeker/gseeker_s.tga
}

models/monsters/guardian/tongue
{
	flesh
	clamp
	unsmoothedTangents
 	diffusemap	    models/monsters/guardian/tongue.tga
	bumpmap		addnormals(models/monsters/hellknight/tongue_local.tga, heightmap(models/monsters/hellknight/tongue_h.tga, 4 ) )
	specularmap		models/monsters/hellknight/tongue_s.tga
}

models/monsters/guardian/guardianfx
{
	flesh
	clamp
	unsmoothedtangents
	{
		blend add
		map models/monsters/guardian/guardianfx
	}
}

models/monsters/guardian/guardian
{
	flesh
	clamp
	unsmoothedtangents
	renderbump  -size 1024 1024 -trace 0.02 -colorMap -aa 2  models/monsters/guardian/guardian_local.tga models/monsters/guardian/guardian_hi.lwo
	diffusemap	models/monsters/guardian/guardian.tga
	bumpmap		addnormals( models/monsters/guardian/guardian_local.tga, heightmap( models/monsters/guardian/guardian_h.tga, 14 ) )
	specularmap	models/monsters/guardian/guardian_s.tga
}

models/monsters/zombie/fatty/fatty
{
	qer_editorimage	models/monsters/zombie/fatty/fatty_local.tga
	noSelfShadow
	unsmoothedTangents
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.5 * (time - parm7)
	}
	renderbump  -size 1024 1024 -trace 0.02 -aa 2  models/monsters/zombie/fatty/fatty_local.tga models/monsters/zombie/fatty/fatty_hi.lwo
	forceoverlays
	diffusemap	  models/monsters/zombie/fatty/fatty_d.tga
	bumpmap		addnormals( models/monsters/zombie/fatty/fatty_local.tga, heightmap( models/monsters/zombie/fatty/fatty_h.tga, 7 ) )
	specularmap	models/monsters/zombie/fatty/fatty_s.tga
}

models/monsters/zombie/fatty/fattydamage
{
	qer_editorimage	models/monsters/zombie/fatty/fatty_local.tga
	noSelfShadow
	unsmoothedTangents
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.5 * (time - parm7)
	}
	renderbump  -size 1024 1024 -trace 0.02 -aa 2  models/monsters/zombie/fatty/fatty_local.tga models/monsters/zombie/fatty/fatty_hi.lwo
	forceoverlays
	diffusemap	  models/monsters/zombie/fatty/fatty_d.tga
	bumpmap		addnormals( models/monsters/zombie/fatty/fatty_local.tga, heightmap( models/monsters/zombie/fatty/fatty_h.tga, 7 ) )
	specularmap	models/monsters/zombie/fatty/fatty_s.tga
}

models/monsters/revenant/revenant
{
	qer_editorimage	models/monsters/revenant/revenant_local.tga
	flesh
	clamp
	unsmoothedTangents
	renderbump  -size 1024 1024 -colorMap -aa 2  models/monsters/revenant/revenant_local.tga models/monsters/revenant/revenant_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/revenant/revenant_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
   		blend add
		blend gl_one, gl_zero
		map models/monsters/revenant/revenant_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	diffusemap	models/monsters/revenant/revenant.tga
	bumpmap		addnormals(models/monsters/revenant/revenant_local.tga, heightmap(models/monsters/revenant/revenant_h.tga, 2 ) )
	specularmap		models/monsters/revenant/revenant_s.tga
}

models/monsters/revenant/revenant2
{
   	noselfShadow
	noShadows
	translucent
	unsmoothedTangents
	flesh
	clamp
	renderbump  -size 512 512 -aa 2  models/monsters/revenant/revenant2_local.tga models/monsters/revenant/revenant2_hi.lwo
	{
		if ( parm7 == 0 )
		blend	 diffusemap
		map	models/monsters/revenant/revenant2.tga
		rgb		revtable[ time * .1 ]
		//translate	time * -.02 , time * 0.2
	}
	{
		if ( parm7 == 0 )
		blend	bumpmap
		map		  models/monsters/revenant/revenant2_local.tga
	}
	{
		if ( parm7 == 0 )
		blend	 specularmap
		map	models/monsters/revenant/revenant2_s.tga
		translate	time * -.02 , time * 0.2
		//rotate	time * 0.05
		//rgb		rev2table[ time * .1 ]
	}
}

models/monsters/lost/lost
{
	qer_editorimage	models/monsters/lost/lost_local.tga
	noSelfShadow
	unsmoothedTangents
	flesh
	clamp
	renderbump  -size 512 512 -trace 0.07 -aa 2  models/monsters/lost/lost_local.tga models/monsters/lost/lost_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
   		blend add
		blend gl_one, gl_zero
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	diffusemap	models/monsters/lost/lost.tga
	bumpmap		addnormals( models/monsters/lost/lost_local.tga, heightmap( models/monsters/lost/lost_b.tga, 9 ) )
	specularmap	models/monsters/lost/lost_s.tga
}

models/monsters/mancubus/mancubus
{
	qer_editorimage	models/monsters/mancubus/mancubus_local.tga
	noselfShadow
	flesh
	clamp
	renderbump  -size 1024 1024 -colorMap -aa 2  models/monsters/mancubus/mancubus_local.tga models/monsters/mancubus/mancubus_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/mancubus/mancubus_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/mancubus/mancubus_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	diffusemap models/monsters/mancubus/mancubus.tga
	bumpmap addnormals(models/monsters/mancubus/mancubus_local.tga, heightmap(models/monsters/mancubus/mancubus_h.tga, 5 ) )
	specularmap	models/monsters/mancubus/mancubus_s.tga
}

models/monsters/mancubus/mancubus_metal
{
	qer_editorimage	models/monsters/mancubus/mancubus_local.tga
	nooverlays
	noselfShadow
	metal
	clamp
	renderbump  -size 1024 1024 -aa 2  models/monsters/mancubus/mancubus_local.tga models/monsters/mancubus/mancubus_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/mancubus/mancubus_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/mancubus/mancubus_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	diffusemap	models/monsters/mancubus/mancubus.tga
	bumpmap		addnormals(models/monsters/mancubus/mancubus_local.tga, heightmap(models/monsters/mancubus/mancubus_h.tga, 5 ) )
	specularmap	models/monsters/mancubus/mancubus_s.tga
}

models/monsters/sentry/sentry
{
	noselfShadow
	unsmoothedTangents
	ricochet
	clamp
	renderbump  -size 1024 1024 -trace 0.07 -colorMap -aa 2  models/monsters/sentry/sentry_local.tga models/monsters/sentry/sentry_hi.lwo
	diffusemap	models/monsters/sentry/sentry_d.tga
	bumpmap		addnormals( models/monsters/sentry/sentry_local.tga, heightmap( models/monsters/sentry/sentry_h.tga, 3 ) )
	specularmap	models/monsters/sentry/sentry_s.tga
}

models/monsters/maggot/magspine
{
	noselfShadow
	noshadows
	metal
	clamp
	{
		if ( parm7 == 0 )
		blend	diffusemap
		map	models/monsters/maggot/magspine.tga
		alphaTest 0.5
	}
	bumpmap			models/monsters/maggot/magspine_local.tga
	specularmap		models/monsters/maggot/magspine_s.tga
}

models/monsters/maggot/magtongue
{
	noselfShadow
	//unsmoothedTangents
	flesh
	clamp
	diffusemap	    models/monsters/maggot/magtongue.tga
	bumpmap		addnormals(models/monsters/maggot/magtongue_local.tga, heightmap(models/monsters/maggot/magtongue_h.tga, 9 ) )
	specularmap  models/monsters/maggot/magtongue_s.tga
}

models/monsters/maggot/mageyes
{
	noShadows
	//deform sprite
	//discrete
	nonsolid
	noimpact
	{
		blend	add
		map	models/monsters/maggot/mageyes.tga
		//rgb		eyestable[ time * .1 ]
	}
 }

models/monsters/maggot/maggot3
{
	qer_editorimage	models/monsters/maggot/maggot3_local.tga
	noselfShadow
	unsmoothedTangents
	flesh
	clamp
	renderbump  -size 1024 1024 -trace 0.02 -colorMap -aa 2  models/monsters/maggot/maggot3_local.tga models/monsters/maggot/maggot3_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/maggot/maggot3_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/maggot/maggot3_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	diffusemap	    models/monsters/maggot/maggot3_d.tga
	bumpmap		addnormals(models/monsters/maggot/maggot3_local.tga, heightmap(models/monsters/maggot/maggot3_h.tga, 9 ) )
	specularmap  models/monsters/maggot/maggot3_s.tga
}

//// Zombie Security guards
// Someone spelled "shield" wrong -Xian
models/monsters/zsecurity/zsheild_glass
{
 	translucent
	twosided
	//nonsolid
	//noimpact
	noshadows
	ricochet
	{
		blend	filter
		map	models/monsters/zsecurity/zsheild_glass.tga
	}
	specularmap  	 models/monsters/zsecurity/zsheild_glass.tga
	{
		blend add
		cubeMap		env/gen1
		texgen		reflect
	}
}

models/monsters/zsecurity/zsheild
{
	renderbump  -size 512 512 -trace 0.07 -colorMap -aa 2  models/monsters/zsecurity/zsheild_local.tga models/monsters/zsecurity/zsheild_hi.lwo
 	noselfShadow
	//nonsolid
	clamp
	forceoverlays
	ricochet
	{
		blend	diffusemap
		map	models/monsters/zsecurity/zsheild.tga
		alphaTest 0.5
	}
	specularmap 	models/monsters/zsecurity/zsheild_s.tga
	bumpmap		addnormals(models/monsters/zsecurity/zsheild_local.tga, heightmap(models/monsters/zsecurity/zsheild_h.tga, 10 ) )
}

models/monsters/zsecurity/zsechead3
{
	noselfShadow
	unsmoothedTangents
	metal
	clamp
	renderbump  -size 512 512 -trace 0.07 -colorMap -aa 2  models/monsters/zsecurity/zsechead3_local.tga models/monsters/zsecurity/zsechead3_hi.lwo
	diffusemap	    models/monsters/zsecurity/zsechead3.tga
	{
		blend bumpmap
		map  addnormals(models/monsters/zsecurity/zsechead3_local.tga, heightmap(models/monsters/zsecurity/zsechead3_h.tga, 4 ) )
	}
	specularmap		models/monsters/zsecurity/zsechead3_s.tga
}

models/monsters/zsecurity/zsechead
{
	noselfShadow
	unsmoothedTangents
	metal
	clamp
	renderbump  -size 512 512 -trace 0.07 -colorMap -aa 2  models/monsters/zsecurity/zsechead_local.tga models/monsters/zsecurity/zsechead_hi.lwo
	diffusemap	models/monsters/zsecurity/zsechead.tga
	bumpmap		addnormals(models/monsters/zsecurity/zsechead_local.tga, heightmap(models/monsters/zsecurity/zsechead_h.tga,7 ) )
	specularmap		models/monsters/zsecurity/zsechead_s.tga
}

models/monsters/zsecurity/zsechead2
{
	noselfShadow
	unsmoothedTangents
	metal
	clamp
	noOverlays
	renderbump  -size 512 512 -trace 0.07 -colorMap -aa 2  models/monsters/zsecurity/zsechead2_local.tga models/monsters/zsecurity/zsechead2_hi.lwo
	diffusemap	    models/monsters/zsecurity/zsechead2.tga
	bumpmap		    models/monsters/zsecurity/zsechead2_local.tga
	specularmap		models/monsters/zsecurity/zsechead2_s.tga
}

models/monsters/zsecurity/zsechead4
{
	noselfShadow
	//unsmoothedTangents
	flesh
	clamp
	renderbump  -size 512 512 -trace 0.07 -colorMap -aa 2  models/monsters/zsecurity/zsechead4_local.tga models/monsters/zsecurity/zsechead4_hi.lwo
	diffusemap	    models/monsters/zsecurity/zsechead4.tga
	{
		blend bumpmap
		map  addnormals(models/monsters/zsecurity/zsechead4_local.tga, heightmap(models/monsters/zsecurity/zsechead4_h.tga, 8 ) )
	}
	specularmap		models/monsters/zsecurity/zsechead4_s.tga
}

models/monsters/archvile/archvilehand2
{
	qer_editorimage	models/monsters/archvile/archvile2_local.tga
	//noselfShadow
	//renderbump  -size 256 256 -trace 0.01 -colorMap -aa 2  models/monsters/archvile/archvilehand2_local.tga models/monsters/archvile/archvilehand2_hi.lwo
	//DECAL_MACRO
 	noselfShadow
	noShadows
	translucent
	{
		blend add
		map		models/monsters/archvile/archvilehand2_fx.tga
		rgb		archtable[ ( time + parm4 ) * .8 ]
	}
}

models/monsters/archvile/archvile2
{
	qer_editorimage	models/monsters/archvile/archvile2_local.tga
	noselfShadow
	unsmoothedTangents
	flesh
	clamp
	renderbump  -size 1024 1024 -trace 0.01 -colorMap -aa 2  models/monsters/archvile/archvile2_local.tga models/monsters/archvile/archvile2_hi.lwo
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/archvile/archvile2_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
	  	blend gl_one, gl_zero
		map models/monsters/archvile/archvile2_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	diffusemap	    models/monsters/archvile/archvile2.tga
	bumpmap		addnormals(models/monsters/archvile/archvile2_local.tga, heightmap(models/monsters/archvile/archvile2_h.tga, 3) )
	specularmap  models/monsters/archvile/archvile2_s.tga
}

models/monsters/tentacle/dp_tentacle
{
	qer_editorimage	models/monsters/tentacle/dp_tentacle_local.tga
	noSelfShadow
	clamp
	flesh
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/tentacle/dp_tentacle_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
	  	blend gl_one, gl_zero
		map models/monsters/tentacle/dp_tentacle_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	renderbump  -size 128 256  -aa 2  models/monsters/tentacle/dp_tentacle_local.tga models/monsters/tentacle/dp_tentacle_hi.lwo
	diffusemap	models/monsters/tentacle/dp_tentacle.tga
	bumpmap		addnormals( models/monsters/tentacle/dp_tentacle_local.tga, heightmap( models/monsters/tentacle/dp_tentacle_h.tga, 7 ) )
	specularmap	models/monsters/tentacle/dp_tentacle_s.tga
}

models/monsters/zombie/commando/teeth
{
	qer_editorimage	models/monsters/zombie/commando/teeth_b.tga
	noSelfShadow
	noshadows
	twoSided
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
   		blend add
		blend gl_one, gl_zero
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceoverlays
	{
		if ( parm7 == 0 )
		blend	diffusemap
		map	models/monsters/zombie/commando/teeth.tga
		alphaTest 0.5
	}
	bumpmap	   heightmap(models/monsters/zombie/commando/teeth_b.tga , 6 )
	specularmap models/monsters/zombie/commando/teeth_s.tga
}

models/monsters/zombie/commando/com1_eye
{
	{
		blend	add
		map	models/monsters/zombie/commando/com1_eye.tga
		rgb		eyestable[ time * .3 ]
	}
}

models/monsters/zombie/commando/com1_d
{
	qer_editorimage	models/monsters/zombie/commando/com1_local.tga
	noSelfShadow
	unsmoothedTangents
	flesh
	clamp
	renderbump  -size 1024 1024 -trace 0.05 -colorMap -aa 2 models/monsters/zombie/commando/com1_local.tga models/monsters/zombie/commando/com1_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/zombie/commando/com1_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
   		blend add
		blend gl_one, gl_zero
		map models/monsters/zombie/commando/com1_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceoverlays
	diffusemap	models/monsters/zombie/commando/com1_d.tga
	bumpmap		addnormals( models/monsters/zombie/commando/com1_local.tga, heightmap( models/monsters/zombie/commando/com1_h.tga, 7 ) )
	specularmap	models/monsters/zombie/commando/com1_s.tga
}

models/monsters/pinky/pinky_d
{
	flesh
	noSelfShadow
	unsmoothedTangents
	clamp
	renderbump  -size 1024 1024 -trace 0.05 -colorMap -aa 2 models/monsters/pinky/pinky_local.tga models/monsters/pinky/zpinky_hi.lwo
	bumpmap	addnormals( models/monsters/pinky/pinky_local.tga, heightmap( models/monsters/pinky/pinky_b.tga, 9 ) )
	diffusemap	models/monsters/pinky/pinky_d.tga
	specularmap	models/monsters/pinky/pinky_s.tga
}

models/monsters/pinky/pinky
{
	qer_editorimage	models/monsters/pinky/pinky_local.tga
	noSelfShadow
	unsmoothedTangents
	flesh
	clamp
	renderbump  -size 1024 1024 -trace 0.05 -colorMap -aa 2 models/monsters/pinky/pinky_local.tga models/monsters/pinky/zpinky_hi.lwo
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/pinky/pinky_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/pinky/pinky_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	bumpmap	addnormals( models/monsters/pinky/pinky_local.tga, heightmap( models/monsters/pinky/pinky_b.tga, 4 ) )
	diffusemap	models/monsters/pinky/pinky_d.tga
	specularmap	models/monsters/pinky/pinky_s.tga
}

models/monsters/pinky/pinkyns
{
	noSelfShadow
	unsmoothedTangents
	flesh
	clamp
	bumpmap	addnormals( models/monsters/pinky/pinky_local.tga, heightmap( models/monsters/pinky/pinky_b.tga, 9 ) )
	diffusemap	models/monsters/pinky/pinky_d.tga
	specularmap	models/monsters/pinky/pinky_s.tga
}

models/monsters/pinky/pinky_metal
{
	qer_editorimage	models/monsters/pinky/pinky_local.tga
   	forceOverlays
	noSelfShadow
	unsmoothedTangents
	ricochet
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/pinky/pinky_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/pinky/pinky_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	bumpmap	addnormals( models/monsters/pinky/pinky_local.tga, heightmap( models/monsters/pinky/pinky_b.tga, 9 ) )
	diffusemap	models/monsters/pinky/pinky_d.tga
	specularmap	models/monsters/pinky/pinky_s.tga
}

models/monsters/pinky/film
{
	noselfShadow
	noShadows
	translucent
	bumpmap 		heightmap(models/monsters/pinky/film_b.tga, 4 )
	specularmap		models/monsters/pinky/film_s.tga
}

models/monsters/cacodemon/cacodemon
{
	qer_editorimage	models/monsters/cacodemon/cacodemon_local.tga
	unsmoothedTangents
	//renderbump  -size 512 512 -aa 2 -colormap models/monsters/cacodemon/cacodemon_foot_local.tga models/monsters/cacodemon/work/cacodemon_hp_foot.lwo
	renderbump  -size 512 512 -aa 2 -colormap models/monsters/cacodemon/cacodemon_jaw_local.tga models/monsters/cacodemon/work/cacodemon_hp_jaw.lwo
	noselfshadow
	flesh
	clamp
	collision
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/cacodemon/cacodemon_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
   		blend add
		blend gl_one, gl_zero
		map models/monsters/cacodemon/cacodemon_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceoverlays
	{
		blend	bumpmap
		map	addnormals(models/monsters/cacodemon/cacodemon_local.tga, heightmap(models/monsters/cacodemon/cacodemon_h.tga, 6) )
	}
	{
		if ( parm7 == 0 )
		blend	diffusemap
		map		models/monsters/cacodemon/cacodemon_d
		alphatest .75
	}
	{
		if ( parm7 )
		blend	diffusemap
		map		models/monsters/cacodemon/cacodemon_d
	}
	specularmap	models/monsters/cacodemon/cacodemon_s
}

models/monsters/cacodemon/cacodemon_mouth
{
	qer_editorimage	models/monsters/cacodemon/cacodemon_local.tga
	unsmoothedTangents
	//renderbump  -size 512 512 -aa 2 -colormap models/monsters/cacodemon/cacodemon_mouth_local.tga models/monsters/cacodemon/work/cacodemon_hp_jaw.lwo
	noselfshadow
	flesh
	collision
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/cacodemon/cacodemon_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
   		blend add
		blend gl_one, gl_zero
		map models/monsters/cacodemon/cacodemon_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	{
		blend	bumpmap
		map	addnormals(models/monsters/cacodemon/cacodemon_local.tga, heightmap(models/monsters/cacodemon/cacodemon_h.tga, 6) )
	}
	{
		if ( parm7 == 0 )
		blend	diffusemap
		map		models/monsters/cacodemon/cacodemon_d
		alphatest .75
	}
	{
		if ( parm7 )
		blend	diffusemap
		map		models/monsters/cacodemon/cacodemon_d
	}
	{
		blend	specularmap
		map	models/monsters/cacodemon/cacodemon_s
	}
}

// EXPLANATION:  This shader's for the glowy eyes
models/monsters/cacodemon/cacoeye
{
	translucent
	noshadows
	collision
	{
		if ( parm7 == 0 )
		blend	add
		map		models/monsters/cacodemon/cacoeye
	}
}

// EXPLANATION:  This shader's for the glowy brain.
models/monsters/cacodemon/cacobrain
{
	translucent
	noshadows
	collision
	{
		if ( parm7 == 0 )
		blend	add
		map		models/monsters/cacodemon/cacobrain
		rgb		throbtable2[ time * .5 ]
	}
}

models/monsters/cherub/teeth
{
		noSelfShadow
		noshadows
		clamp
		{
			if ( parm7 == 0 )
			blend	diffusemap
			map	models/monsters/cherub/teeth.tga
			alphaTest 0.5
		}
		{
			if ( parm7 == 0 )
			blend bumpmap
			map	   heightmap(models/monsters/cherub/teeth_h.tga , 4 )
		}
		{
			if ( parm7 == 0 )
			blend specularmap
			map models/monsters/cherub/teeth_s.tga
		}
}

models/monsters/cherub/wing
{
	noselfShadow
	noShadows
	translucent
	glass
	clamp
	{
		if ( parm7 == 0 )
		blend gl_dst_color,gl_zero
		map	models/monsters/cherub/wing.tga
	}
 }

models/monsters/cherub/wingfx
{
	noselfShadow
	noShadows
	translucent
	glass
	clamp
	{
		if ( parm7 == 0 )
		blend specularmap
		map	models/monsters/cherub/wing_s.tga
	}
	{
		if ( parm7 == 0 )
		blend bumpmap
		map	heightmap(models/monsters/cherub/wing_h.tga, 7 )
	}
 }

models/monsters/spectre/dis2
{
	noselfShadow
	twosided
	clamp
	{
		blend add
		map models/monsters/spectre/dis2.tga
		alphaTest .5 + 0.5 * sintable [ time * .2  ] -.02
	}
}

models/monsters/zombie/zombie02/zombie02
{
	qer_editorimage	models/characters/male_npc/jumpsuit/jumpsuit_local.tga
	noselfShadow
	//unsmoothedTangents
	flesh
	forceoverlays
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	diffusemap	  models/monsters/zombie/zombie02/zombie02.tga
	{
		blend bumpmap
		map  addnormals(models/characters/male_npc/jumpsuit/jumpsuit_local.tga, heightmap(models/monsters/zombie/zombie02/zombie02_h.tga, 12 ) )
	}
	specularmap	models/monsters/zombie/zombie02/zombie02_s.tga
}

models/monsters/zombie/zombie02/zhead02
{
	noselfShadow
	unsmoothedTangents
	forceoverlays
	flesh
	clamp
	renderbump  -size 512 512 -trace 0.05 -colorMap -aa 2  models/monsters/zombie/zombie02/zhead02_local.tga models/monsters/zombie/zombie02/zhead02_hi.lwo
	diffusemap	    models/monsters/zombie/zombie02/zhead02.tga
	bumpmap		addnormals(models/monsters/zombie/zombie02/zhead02_local.tga, heightmap(models/monsters/zombie/zombie02/zhead02_h.tga, 9 ) )
	specularmap  models/monsters/zombie/zombie02/zhead02_s.tga
}

models/monsters/trite/web1
{
	collision
	translucent
	qer_editorimage models/monsters/trite/web1.tga
	noShadows
	{
		blend diffusemap
		map models/monsters/trite/web1.tga
	}
}

models/monsters/trite/strand
{
	translucent
	qer_editorimage models/monsters/trite/strand.tga
	noShadows
	{
		blend diffusemap
		map models/monsters/trite/strand.tga
	}
}

models/monsters/trite/trite
{
	qer_editorimage	models/monsters/trite/trite.tga
	noselfShadow
	//unsmoothedTangents
	flesh
	clamp
	renderbump  -size 512 512 -trace 0.02 -colorMap -aa 2  models/monsters/trite/trite_local.tga models/monsters/trite/ztrite_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	forceOverlays
	diffusemap	    models/monsters/trite/trite.tga
	bumpmap	    models/monsters/trite/trite_local.tga
	specularmap     models/monsters/trite/trite_s.tga
}

models/gibs/gibmaster
{
	noselfShadow
	unsmoothedTangents
	nonsolid
	//noimpact removed by Tim
	flesh
	clamp
	renderbump  -size 512 512 -trace 0.02 -colorMap -aa 2  models/gibs/gibmaster_local.tga models/gibs/gibmaster_hi.lwo
	diffusemap	    models/gibs/gibmaster.tga
	bumpmap		addnormals(models/gibs/gibmaster_local.tga, heightmap(models/gibs/gibmaster_h.tga, 10 ) )
	specularmap		models/gibs/gibmaster_s.tga
}

models/monsters/ghostskull/bugger
{
	noselfShadow
	noshadows
	translucent
	//nodraw
	deform particle2 ghostskull
	{
		blend	 add
		map models/monsters/ghostskull/bugger
	}
}

models/monsters/ghostskull/ghostskull3emit
{
	noselfShadow
	noshadows
	translucent
	//nodraw
	//deform particle2 ghostskull
	{
		blend	 add
		map models/monsters/ghostskull/ghostskull3emit
	}
}

models/monsters/ghostskull/ghostskull3
{
	noselfShadow
	noShadows
	translucent
	renderbump  -size 512 512 -trace 0.1 -colorMap -aa 2  models/monsters/ghostskull/ghostskull3_local.tga models/monsters/ghostskull/ghostskull3_hi.lwo
	bumpmap		models/monsters/ghostskull/ghostskull3_local
	diffusemap	    models/monsters/ghostskull/ghostskull3.tga
	{
		blend	 specularmap
		map	models/monsters/ghostskull/ghostskull3_s.tga
		scroll	time * -.5 , time * 0
	}
	{
		blend	 add
		map	models/monsters/ghostskull/ghostskull3_add.tga
		rgb		throbtable2[ time * .5 ] +.1
	}
}

models/monsters/hellknight/tongue
{
	qer_editorimage	models/monsters/hellknight/tongue_local.tga
	flesh
	unsmoothedTangents
	renderbump  -size 128 256 -trace 0.1 -colorMap -aa 2  models/monsters/hellknight/tongue_local.tga models/monsters/hellknight/tongue_hi.lwo
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/hellknight/hellknight_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/hellknight/hellknight_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	diffusemap	    models/monsters/hellknight/tongue.tga
	bumpmap		addnormals(models/monsters/hellknight/tongue_local.tga, heightmap(models/monsters/hellknight/tongue_h.tga, 4 ) )
	specularmap		models/monsters/hellknight/tongue_s.tga
}

models/monsters/hellknight/gob2
{
	noselfShadow
	noshadows
	//twosided
	translucent
	bumpmap 		heightmap(models/monsters/hellknight/gob2_h.tga, 4 )
	specularmap		models/monsters/hellknight/gob2_s.tga
}

models/monsters/hellknight/gob
{
	noselfShadow
	noshadows
	//twosided
	translucent
	{
		blend bumpmap
		map heightmap(models/monsters/hellknight/gob_h.tga, 4 )
		translate	time * 0 , time * -1
	}
	specularmap		models/monsters/hellknight/gob_s.tga
}

models/monsters/hellknight/hellknight
{
	qer_editorimage	models/monsters/hellknight/hellknight_local.tga
	flesh
	unsmoothedTangents
	clamp
	renderbump  -size 1024 1024 -trace 0.02 -colorMap -aa 1  models/monsters/hellknight/hellknight_local.tga models/monsters/hellknight/zhellknight_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/hellknight/hellknight_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/hellknight/hellknight_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	diffusemap	    models/monsters/hellknight/hellknight.tga
	bumpmap		addnormals(models/monsters/hellknight/hellknight_local.tga, heightmap(models/monsters/hellknight/hellknight_h.tga, 10 ) )
	specularmap		models/monsters/hellknight/hellknight_s.tga
}

models/monsters/zsecurity/marsec
{
	noselfShadow
	translucent
	//twosided
	nonsolid
	noimpact
	noshadows
	{
		blend	diffusemap
		map	models/monsters/zsecurity/marsec.tga
	}
}

models/monsters/zsecurity/zsgogs
{
	noselfShadow
	renderbump  -size 256	256 -trace 0.07 -colorMap -aa 2  models/monsters/zsecurity/zsgogs_local.tga models/monsters/zsecurity/zsgogs_hi.lwo
	{
		blend	diffusemap
		map	models/monsters/zsecurity/zsgogs.tga
		alphaTest 0.7
	}
	bumpmap		models/monsters/zsecurity/zsgogs_local.tga
	specularmap		models/monsters/zsecurity/zsgogs_s.tga
}

models/monsters/zsecurity/zsgogs2damage
{
 	translucent
	twosided
	nonsolid
	noimpact
	noshadows
	{
		blend	filter
		map	models/monsters/zsecurity/zsgogs2damage.tga
	}
	bumpmap		addnormals(models/monsters/zsecurity/zsgogs2_local.tga, heightmap(models/monsters/zsecurity/zsgogs2_h.tga,7 ) )
	specularmap  	 models/monsters/zsecurity/zsgogs2damage_s.tga
}

models/monsters/zsecurity/zsgogs2
{
 	translucent
	twosided
	nonsolid
	noimpact
	noshadows
	noselfshadow
	//nodraw
	renderbump  -size 256	256 -trace 0.07 -colorMap -aa 2  models/monsters/zsecurity/zsgogs2_local.tga models/monsters/zsecurity/zsgogs2_hi.lwo
	{
		blend	filter
		map	models/monsters/zsecurity/zsgogs2.tga
	}
	bumpmap		models/monsters/zsecurity/zsgogs2_local.tga
	specularmap  	 models/monsters/zsecurity/zsgogs2_s.tga
	{
		blend add
		cubeMap		env/generic
		texgen		reflect
	}
}

models/monsters/revenant/reye
{
	noShadows
	//deform sprite
	//discrete
	nonsolid
	noimpact
	{
		if ( parm7 == 0 )
		blend	add
		map	models/monsters/revenant/reye.tga
		rgb		eyestable[ time * .7 ]
	}
}

models/monsters/revenant/leye
{
	noShadows
	//deform sprite
	//discrete
	nonsolid
	noimpact
	{
		if ( parm7 == 0 )
		blend	add
		map	textures\sfx\black_2
		//rgb		eyestable[ time * .7 ]
	}
}

models/gibs/spine
{
	noselfShadow
	flesh
	clamp
	renderbump  -size 128 256 -aa 2  models/gibs/spine_local.tga models/gibs/spine_hi.lwo
	diffusemap	models/gibs/spine.tga
	bumpmap		models/gibs/spine_local.tga
	specularmap	models/gibs/spine_s.tga
}

models/monsters/mancubus/mpipe_fx
 {
	qer_editorimage	models/monsters/mancubus/mpipe_local.tga
	noselfShadow
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/mancubus/mancubus_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/mancubus/mancubus_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	{
		blend	diffusemap
		map	models/monsters/mancubus/mpipe_fx.tga
		translate	time * 0.1 , time * 0.2
		scale	2, 4  //scaleTable[time * 0.2] , scaleTable[time * 0.1]
	}
	{
		Blend	bumpmap
		map		models/monsters/mancubus/mpipe_local.tga
	}
	{
		Blend 	specularmap
		map		 models/monsters/mancubus/mpipe_s.tga
	}
}

models/monsters/mancubus/mpipe
{
	noselfShadow
	renderbump  -size 256 256 -aa 2  models/monsters/mancubus/mpipe_local.tga models/monsters/mancubus/mpipe_hi.lwo
	forceOverlays
	{
		if ( parm7 == 0 )
		blend	diffusemap
		map	models/monsters/mancubus/mpipe.tga
		alphaTest 0.7
	}
	{
		if ( parm7 == 0 )
		Blend	bumpmap
		map		models/monsters/mancubus/mpipe_local.tga
	}
	{
		if ( parm7 == 0 )
		Blend 	specularmap
		map		 models/monsters/mancubus/mpipe_s.tga
	}
}

models/monsters/zombie/zombie01/zback01
{
	qer_editorimage	models/monsters/zombie/zombie01/zback01.tga
	noShadows
	nonsolid
	noimpact
	twoSided
	translucent
	forceoverlays
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	{
		blend	filter
		map	models/monsters/zombie/zombie01/zback01.tga
	}
	specularmap models/monsters/zombie/zombie01/zback01_s.tga
}

models/monsters/zombie/zombie01/eyes/dead
{
	translucent
	noshadows
	//deform	eyeBall
	sort 1
	{
		blend add
		map models/monsters/zombie/zombie01/eyes/godmode.tga
		//translate	time * 0.0 , time * 0.6
	}
}

models/gibs/brain
{
	qer_editorimage	models/gibs/brain_local.tga
	noselfShadow
	flesh
	nonsolid
	noimpact
	clamp
	renderbump  -size 128 128 -aa 4  models/gibs/brain_local.tga models/gibs/brain_hi.lwo
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		blend diffusemap
		map models/gibs/brain.tga
		//alphaTest parm6
	}
	bumpmap		models/gibs/brain_local.tga
	specularmap	models/gibs/brain_s.tga
}

models/monsters/zombie/zombie01/zarms01
{
	qer_editorimage	models/monsters/zombie/zombie01/zarms01_local.tga
	noselfShadow
	forceoverlays
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	renderbump  -size 512 512 -aa 2  models/monsters/zombie/zombie01/zarms01_local.tga models/monsters/zombie/zombie01/zarms01_hi.lwo
	diffusemap	models/monsters/zombie/zombie01/zarms01.tga
	bumpmap		addnormals(models/monsters/zombie/zombie01/zarms01_local.tga, heightmap(models/monsters/zombie/zombie01/zarms01_h.tga, 5 ) )
	specularmap	models/monsters/zombie/zombie01/zarms01_s.tga
}

models/monsters/zombie/zombie01/zarms01b
{
	qer_editorimage	models/monsters/zombie/zombie01/zarms01_local.tga
	noselfShadow
	flesh
	clamp
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	renderbump  -size 512 512 -aa 2  models/monsters/zombie/zombie01/zarms01_local.tga models/monsters/zombie/zombie01/zarms01_hi.lwo
	diffusemap	models/monsters/zombie/zombie01/zarms01b.tga
	bumpmap		addnormals(models/monsters/zombie/zombie01/zarms01_local.tga, heightmap(models/monsters/zombie/zombie01/zarms01_h.tga, 5 ) )
	specularmap	models/monsters/zombie/zombie01/zarms01_s.tga
}

models/monsters/zombie/zombie01/zrarms01
{
	qer_editorimage	models/monsters/zombie/zombie01/zarms01_local.tga
	noselfShadow
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	renderbump  -size 512 512 -aa 2  models/monsters/zombie/zombie01/zarms01_local.tga models/monsters/zombie/zombie01/zarms01_hi.lwo
	diffusemap	models/monsters/zombie/zombie01/zarms01.tga
	bumpmap		addnormals(models/monsters/zombie/zombie01/zarms01_local.tga, heightmap(models/monsters/zombie/zombie01/zarms01_h.tga, 5 ) )
	specularmap	models/monsters/zombie/zombie01/zarms01_s.tga
}

models/monsters/zombie/zombie01/zlarms01
{
	qer_editorimage	models/monsters/zombie/zombie01/zarms01_local.tga
	noselfShadow
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	renderbump  -size 512 512 -aa 2  models/monsters/zombie/zombie01/zarms01_local.tga models/monsters/zombie/zombie01/zarms01_hi.lwo
	diffusemap	models/monsters/zombie/zombie01/zarms01.tga
	bumpmap		addnormals(models/monsters/zombie/zombie01/zarms01_local.tga, heightmap(models/monsters/zombie/zombie01/zarms01_h.tga, 5 ) )
	specularmap	models/monsters/zombie/zombie01/zarms01_s.tga
}

models/monsters/zombie/zombie01/ztorso01
{
	qer_editorimage	models/monsters/zombie/zombie01/ztorso01_local.tga
	noselfShadow
	forceoverlays
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	renderbump  -size 512 512 -aa 2  models/monsters/zombie/zombie01/ztorso01_local.tga models/monsters/zombie/zombie01/ztorso01_hi.lwo
	diffusemap	models/monsters/zombie/zombie01/ztorso01.tga
	bumpmap		addnormals(models/monsters/zombie/zombie01/ztorso01_local.tga, heightmap(models/monsters/zombie/zombie01/ztorso01_h.tga, 5 ) )
	specularmap	models/monsters/zombie/zombie01/ztorso01_s.tga
}

models/monsters/zombie/zombie01/ztorso01b
{
	qer_editorimage	models/monsters/zombie/zombie01/ztorso01_local.tga
	noselfShadow
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	renderbump  -size 512 512 -aa 2  models/monsters/zombie/zombie01/ztorso01_local.tga models/monsters/zombie/zombie01/ztorso01_hi.lwo
	diffusemap	models/monsters/zombie/zombie01/ztorso01b.tga
	bumpmap		addnormals(models/monsters/zombie/zombie01/ztorso01_local.tga, heightmap(models/monsters/zombie/zombie01/ztorso01b_h.tga, 5 ) )
	specularmap	models/monsters/zombie/zombie01/ztorso01b_s.tga
}

models/monsters/zombie/zombie01/zhead03
{
	qer_editorimage	models/monsters/zombie/zombie01/zhead03_local.tga
	noselfShadow
	forceoverlays
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	renderbump  -size 512 512 -aa 2  models/monsters/zombie/zombie01/zhead03_local.tga models/monsters/zombie/zombie01/zhead03_hi.lwo
	diffusemap	models/monsters/zombie/zombie01/zhead03.tga
	bumpmap		addnormals(models/monsters/zombie/zombie01/zhead03_local.tga, heightmap(models/monsters/zombie/zombie01/zhead03_h.tga, 9 ) )
	specularmap	models/monsters/zombie/zombie01/zhead03_s.tga
}

models/monsters/zombie/zombie01/zhead02
{
	qer_editorimage	models/monsters/zombie/zombie01/zhead02_local.tga
	noselfShadow
	forceoverlays
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	renderbump  -size 512 512 -aa 2  models/monsters/zombie/zombie01/zhead02_local.tga models/monsters/zombie/zombie01/zhead02_hi.lwo
	diffusemap	models/monsters/zombie/zombie01/zhead02.tga
	bumpmap		addnormals(models/monsters/zombie/zombie01/zhead02_local.tga, heightmap(models/monsters/zombie/zombie01/zhead02_h.tga, 3 ) )
	specularmap	models/monsters/zombie/zombie01/zhead02_s.tga
}

models/monsters/zombie/zombie01/zhead02b
{
	qer_editorimage	models/monsters/zombie/zombie01/zhead02_local.tga
	noselfShadow
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	renderbump  -size 512 512 -aa 2  models/monsters/zombie/zombie01/zhead02_local.tga models/monsters/zombie/zombie01/zhead02_hi.lwo
	diffusemap	models/monsters/zombie/zombie01/zhead02b.tga
	bumpmap		addnormals(models/monsters/zombie/zombie01/zhead02_local.tga, heightmap(models/monsters/zombie/zombie01/zhead02b_h.tga, 3 ) )
	specularmap	models/monsters/zombie/zombie01/zhead02b_s.tga
}

models/monsters/zombie/zombie01/zlegs01
{
	qer_editorimage	models/monsters/zombie/zombie01/zlegs01_local.tga
	noselfShadow
	forceoverlays
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	renderbump  -size 512 512 -aa 2  models/monsters/zombie/zombie01/zlegs01_local.tga models/monsters/zombie/zombie01/zlegs01_hi.lwo
	diffusemap	models/monsters/zombie/zombie01/zlegs01.tga
	bumpmap		addnormals(models/monsters/zombie/zombie01/zlegs01_local.tga, heightmap(models/monsters/zombie/zombie01/zlegs01_h.tga, 5 ) )
	specularmap	models/monsters/zombie/zombie01/zlegs01_s.tga
}

models/monsters/zombie/zombie01/zlegs01b
{
	qer_editorimage	models/monsters/zombie/zombie01/zlegs01_local.tga
	noselfShadow
	flesh
	clamp
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	renderbump  -size 512 512 -aa 2  models/monsters/zombie/zombie01/zlegs01_local.tga models/monsters/zombie/zombie01/zlegs01_hi.lwo
	diffusemap	models/monsters/zombie/zombie01/zlegs01b.tga
	bumpmap		addnormals(models/monsters/zombie/zombie01/zlegs01_local.tga, heightmap(models/monsters/zombie/zombie01/zlegs01_h.tga, 5 ) )
	specularmap	models/monsters/zombie/zombie01/zlegs01b_s.tga
}

models/monsters/zombie/zombie01/zhead01
{
	qer_editorimage	models/monsters/zombie/zombie01/zhead01_local.tga
	noselfShadow
	flesh
	clamp
	forceOverlays
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.7 * (time - parm7)
	}
	renderbump  -size 512 512 -aa 2  models/monsters/zombie/zombie01/zhead01_local.tga models/monsters/zombie/zombie01/zhead01_hi.lwo
	diffusemap	models/monsters/zombie/zombie01/zhead01.tga
	bumpmap		addnormals(models/monsters/zombie/zombie01/zhead01_local.tga, heightmap(models/monsters/zombie/zombie01/zhead01_h.tga, 5 ) )
	specularmap	models/monsters/zombie/zombie01/zhead01_s.tga
}

models/monsters/sentry/spiston_d
{
	noShadows
	{
		blend bumpmap
		map		models/monsters/sentry/spiston_local.tga
	}
	{
		blend	diffuseMap //GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA
		map	models/monsters/sentry/spiston_d.tga
		alphaTest 0.5
	}
	specularmap	models/monsters/sentry/spiston_s.tga
 }

models/monsters/sentry/sflap_d
{
	noShadows
	{
		blend bumpmap
		map		models/monsters/sentry/sflap_local.tga
	}
	{
		blend	diffuseMap //GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA
		map	models/monsters/sentry/sflap_d.tga
		alphaTest 0.5
	}
	specularmap	models/monsters/sentry/sflap_s.tga
 }

models/monsters/lost/lost_teeth
{
	noSelfShadow
	noshadows
	twoSided
	{
		blend	diffusemap
		map	models/monsters/lost/lost_teeth.tga
		alphaTest 0.5
	}
	bumpmap	   heightmap(models/monsters/lost/lost_teeth_b.tga , 4 )
	specularmap models/monsters/lost/lost_teeth_s.tga
}

models/monsters/pinky/teeth
{
	qer_editorimage	models/monsters/pinky/teeth_b.tga
	noSelfShadow
	twoSided
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/spectre/dis2.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	{
		if ( parm7 == 0 )
		blend	diffusemap
		map	models/monsters/pinky/teeth.tga
		alphaTest 0.5
	}
	bumpmap	   heightmap(models/monsters/pinky/teeth_b.tga , 6 )
	specularmap models/monsters/pinky/teeth_s.tga
}

models/monsters/zombie/boney/adrianboney01
{
	qer_editorimage	models/monsters/zombie/boney/a_boney_localhell02.tga
	noSelfShadow
	unsmoothedTangents
	flesh
	{	// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.5 * (time - parm7)
	}
	renderbump  -size 1024 1024 -trace 0.03 -colorMap -aa 2   models/monsters/zombie/boney/a_boney_localhell02.tga models/monsters/zombie/boney/boney_hi.lwo
	forceoverlays
	diffusemap	  models/monsters/zombie/boney/a_boney_dhell01b
	{
		blend bumpmap
		map  addnormals(models/monsters/zombie/boney/a_boney_localhell02.tga, heightmap(models/monsters/zombie/boney/a_boney_bhell01.tga, 6 ) )
	}
	specularmap	models/monsters/zombie/boney/a_boney_shell01.tga
}

models/monsters/hellknight/a_hk_branded
{
	flesh
	unsmoothedTangents
	noselfShadow
	renderbump  -size 1024 1024 -trace 0.02 -colorMap -aa 1  models/monsters/hellknight/hellknight_local.tga models/monsters/hellknight/zhellknight_hi.lwo
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/hellknight/hellknight_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/hellknight/hellknight_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	diffusemap	    models/monsters/hellknight/a_hk_branded_02b.tga
	bumpmap		addnormals(models/monsters/hellknight/hellknight_local.tga, heightmap(models/monsters/hellknight/a_hk_branded_b01.tga, 10 ) )
	specularmap	      models/monsters/hellknight/a_hk_branded_s02b.tga
}

models/monsters/imp/a_hellimp
{
	unsmoothedTangents
	//noselfshadow
	flesh
	renderbump  -size 512 512 -aa 3 models/monsters/imp/imp_local.tga models/monsters/imp/work/imp_hp.lwo
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/imp/imp_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/imp/imp_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	bumpmap	      addnormals(models/monsters/imp/imp_local.tga, heightmap(models/monsters/imp/a_imp_b08a, 10 ) )
	diffusemap        models/monsters/imp/a_imp_d08a
	specularmap	      models/monsters/imp/a_imp_s08a
}

models/monsters/gseeker/gwhizz
{
	noselfShadow
	noshadows
	translucent
	//nodraw
	deform particle2 gwhizz
	{
		blend	 add
		map models/monsters/gseeker/gwhizz
	}
}

models/monsters/cherub/cherub2
{
	qer_editorimage	models/monsters/cherub/cherub_local.tga
	noselfShadow
	flesh
	renderbump  -size 1024 1024 -trace 0.01 -colorMap -aa 2  models/monsters/cherub/cherub_local.tga models/monsters/cherub/zcherub_hi.lwo
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/cherub/cherub2_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/cherub/cherub2_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	diffusemap	    models/monsters/cherub/cherub.tga
	bumpmap		addnormals(models/monsters/cherub/cherub_local.tga, heightmap(models/monsters/cherub/cherub_h.tga, 0) )
	specularmap  models/monsters/cherub/cherub_s.tga
}

models/monsters/cherub/cherub
{
	qer_editorimage	models/monsters/cherub/cherub_local.tga
	noselfShadow
	flesh
	renderbump  -size 1024 1024 -trace 0.05 -colorMap -aa 2  models/monsters/cherub/cherub_local.tga models/monsters/cherub/zcherub_hi.lwo
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/cherub/cherub2_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{
		// burning corpse effect
		if parm7			// only when dead
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
		blend add
		blend gl_one, gl_zero
		map models/monsters/cherub/cherub2_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}
	forceOverlays
	diffusemap	    models/monsters/cherub/cherub.tga
	bumpmap		addnormals(models/monsters/cherub/cherub_local.tga, heightmap(models/monsters/cherub/cherub_h.tga, 4) )
	specularmap  models/monsters/cherub/cherub_s.tga
}

models/monsters/zombie/boney/boney
{
	qer_editorimage	models/monsters/zombie/boney/boney_local.tga
	noSelfShadow
	flesh
	unsmoothedTangents
	{
		// burning corpse effect
		if	parm7			// only when dead
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 1.5 * (time - parm7)
	}
	renderbump  -size 1024 1024 -trace 0.03 -colorMap -aa 2   models/monsters/zombie/boney/boney_local.tga models/monsters/zombie/boney/boney_hi.lwo
	forceoverlays
	diffusemap	  models/monsters/zombie/boney/boney
	{
		blend bumpmap
		map  addnormals(models/monsters/zombie/boney/boney_local.tga, heightmap(models/monsters/zombie/boney/boney_h.tga, 8 ) )
	}
	specularmap	models/monsters/zombie/boney/boney_s.tga
}

models/monsters/cyberdemon/cyberdemon_temp1
{
	unsmoothedTangents
	//noselfshadow
	renderbump  -size 1024 1024 -aa 2 -colormap models/monsters/cyberdemon/cyberdemon_local1.tga models/monsters/cyberdemon/work/cyberdemonZB_hp1.lwo
	{
		blend	bumpmap
		map	addnormals (models/monsters/cyberdemon/cyberdemon_local, heightmap (models/monsters/cyberdemon/cyberdemon_bmp, 6) )
	}
	{
		blend diffusemap
		map	models/monsters/cyberdemon/cyberdemon
		//
		//alphatest .75
	}
	specularmap	models/monsters/cyberdemon/cyberdemon_s
}

models/monsters/cyberdemon/cyberdemon_temp2
{
	unsmoothedTangents
	//noselfshadow
	renderbump  -size 1024 1024 -aa 2 -colormap models/monsters/cyberdemon/cyberdemon_local2.tga models/monsters/cyberdemon/work/cyberdemonZB_hp2.lwo
	{
		blend	bumpmap
		map	addnormals (models/monsters/cyberdemon/cyberdemon_local, heightmap (models/monsters/cyberdemon/cyberdemon_bmp, 6) )
	}
	{
		blend diffusemap
		map	models/monsters/cyberdemon/cyberdemon
		//
		//alphatest .75
	}
	specularmap	models/monsters/cyberdemon/cyberdemon_s
}

models/monsters/cyberdemon/cyberdemon_temp3
{
	unsmoothedTangents
	//noselfshadow
	renderbump  -size 1024 1024 -aa 2 -trace .02 -colormap models/monsters/cyberdemon/cyberdemon_local3.tga models/monsters/cyberdemon/work/cyberdemonZB_hp3.lwo
	{
		blend	bumpmap
		map	addnormals (models/monsters/cyberdemon/cyberdemon_local, heightmap (models/monsters/cyberdemon/cyberdemon_bmp, 6) )
	}
	{
		blend diffusemap
		map	models/monsters/cyberdemon/cyberdemon
		//
		//alphatest .75
	}
	specularmap	models/monsters/cyberdemon/cyberdemon_s
}


models/monsters/cyberdemon/cyberdemon
{
	unsmoothedTangents
	//noselfshadow
	renderbump  -size 1024 1024 -aa 2 -colormap models/monsters/cyberdemon/cyberdemon_local.tga models/monsters/cyberdemon/work/cyberdemonZB_hp.lwo
	{
		blend	bumpmap
		map	addnormals (models/monsters/cyberdemon/cyberdemon_local, heightmap (models/monsters/cyberdemon/cyberdemon_bmp, 6) )
	}
	{
		blend diffusemap
		map	models/monsters/cyberdemon/cyberdemon
		//
		alphatest .5
	}
	specularmap	models/monsters/cyberdemon/cyberdemon_s
}